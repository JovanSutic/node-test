{
  "openapi": "3.0.0",
  "paths": {
    "/users": {
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        },
        "summary": "Create a user.",
        "tags": [
          "users"
        ]
      },
      "get": {
        "operationId": "UsersController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved all users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Return all users.",
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UsersController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        },
        "summary": "Return user by id.",
        "tags": [
          "users"
        ]
      }
    },
    "/cities": {
      "post": {
        "operationId": "CitiesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to create new city",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCityDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "name": "Amsterdam",
                    "country": "Netherlands",
                    "countriesId": 1,
                    "search": "Amsterdam",
                    "lat": 52.1234,
                    "lng": 12.1234,
                    "size": 100000,
                    "seaside": true
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "id": 1,
                      "name": "Amsterdam",
                      "country": "Netherlands",
                      "countriesId": 1,
                      "search": "Amsterdam",
                      "lat": 52.1234,
                      "lng": 12.1234,
                      "size": 100000,
                      "seaside": true
                    },
                    {
                      "id": 2,
                      "name": "Belgrade",
                      "country": "Serbia",
                      "countriesId": 2,
                      "search": "Belgrade",
                      "lat": 52.1234,
                      "lng": 12.1234,
                      "size": 100000,
                      "seaside": true
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a city",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityDto"
                },
                "examples": {
                  "single": {
                    "summary": "Single created city",
                    "value": {
                      "id": 1,
                      "name": "Amsterdam",
                      "country": "Netherlands",
                      "countriesId": 1,
                      "search": "Amsterdam",
                      "lat": 52.1234,
                      "lng": 12.1234,
                      "size": 100000,
                      "seaside": true
                    }
                  },
                  "multiple": {
                    "summary": "Count",
                    "value": {
                      "count": 10
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create the new city.",
        "tags": [
          "cities"
        ]
      },
      "get": {
        "operationId": "CitiesController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved cities within bounds.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CityDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "Array of CityDTO",
                    "value": {
                      "data": [
                        {
                          "id": 1,
                          "name": "Amsterdam",
                          "country": "Netherlands",
                          "countriesId": 1,
                          "search": "Amsterdam",
                          "lat": 52.1234,
                          "lng": 12.1234,
                          "size": 100000,
                          "seaside": true
                        },
                        {
                          "id": 2,
                          "name": "Rotterdam",
                          "country": "Netherlands",
                          "countriesId": 1,
                          "search": "Rotterdam",
                          "lat": 52.1234,
                          "lng": 12.1234,
                          "size": 100000,
                          "seaside": true
                        }
                      ],
                      "total": 100,
                      "limit": 10
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return cities within map bounds (optional limit).",
        "tags": [
          "cities"
        ]
      },
      "put": {
        "operationId": "CitiesController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to update city",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCityDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "id": 1,
                    "name": "Amsterdam",
                    "country": "Netherlands",
                    "countriesId": 1,
                    "search": "Amsterdam",
                    "lat": 52.1234,
                    "lng": 12.1234,
                    "size": 100000,
                    "seaside": true
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "id": 1,
                      "name": "Amsterdam",
                      "country": "Netherlands",
                      "countriesId": 1,
                      "search": "Amsterdam",
                      "lat": 52.1234,
                      "lng": 12.1234,
                      "size": 100000,
                      "seaside": true
                    },
                    {
                      "id": 2,
                      "name": "Belgrade",
                      "country": "Serbia",
                      "countriesId": 2,
                      "search": "Belgrade",
                      "lat": 52.1234,
                      "lng": 12.1234,
                      "size": 100000,
                      "seaside": false
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated cities.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CityDto"
                  }
                },
                "examples": {
                  "single": {
                    "summary": "Single updated city",
                    "value": {
                      "id": 1,
                      "name": "Amsterdam",
                      "country": "Netherlands",
                      "countriesId": 1,
                      "search": "Amsterdam",
                      "lat": 52.1234,
                      "lng": 12.1234,
                      "size": 100000,
                      "seaside": true
                    }
                  },
                  "multiple": {
                    "summary": "Multiple updated cities",
                    "value": [
                      {
                        "id": 1,
                        "name": "Amsterdam",
                        "country": "Netherlands",
                        "countriesId": 1,
                        "search": "Amsterdam",
                        "lat": 52.1234,
                        "lng": 12.1234,
                        "size": 100000,
                        "seaside": true
                      },
                      {
                        "id": 2,
                        "name": "Belgrade",
                        "country": "Serbia",
                        "countriesId": 2,
                        "search": "Belgrade",
                        "lat": 52.1234,
                        "lng": 12.1234,
                        "size": 100000,
                        "seaside": false
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Update cities",
        "tags": [
          "cities"
        ]
      }
    },
    "/cities/missing-social-report": {
      "get": {
        "operationId": "CitiesController_getCitiesWithoutSocialReport",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved cities that are missing social reports.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CityDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "Array of CityDTO",
                    "value": {
                      "data": [
                        {
                          "id": 1,
                          "name": "Amsterdam",
                          "country": "Netherlands",
                          "countriesId": 1,
                          "search": "Amsterdam",
                          "lat": 52.1234,
                          "lng": 12.1234,
                          "size": 100000,
                          "seaside": true
                        },
                        {
                          "id": 2,
                          "name": "Rotterdam",
                          "country": "Netherlands",
                          "countriesId": 1,
                          "search": "Rotterdam",
                          "lat": 52.1234,
                          "lng": 12.1234,
                          "size": 100000,
                          "seaside": true
                        }
                      ],
                      "total": 100,
                      "limit": 10
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get cities without a specific social lifestyle report type",
        "tags": [
          "cities"
        ]
      }
    },
    "/cities/missing-prices": {
      "get": {
        "operationId": "CitiesController_getCitiesWithMissingPrices",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved cities that are missing prices record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CityDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "Array of CityDTO",
                    "value": {
                      "data": [
                        {
                          "id": 1,
                          "name": "Amsterdam",
                          "country": "Netherlands",
                          "countriesId": 1,
                          "search": "Amsterdam",
                          "lat": 52.1234,
                          "lng": 12.1234,
                          "size": 100000,
                          "seaside": true
                        },
                        {
                          "id": 2,
                          "name": "Rotterdam",
                          "country": "Netherlands",
                          "countriesId": 1,
                          "search": "Rotterdam",
                          "lat": 52.1234,
                          "lng": 12.1234,
                          "size": 100000,
                          "seaside": true
                        }
                      ],
                      "total": 100,
                      "limit": 10
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get cities with missing or insufficient price data",
        "tags": [
          "cities"
        ]
      }
    },
    "/cities/{id}": {
      "get": {
        "operationId": "CitiesController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved city by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "City DTO",
                    "value": {
                      "id": 1,
                      "name": "Amsterdam",
                      "country": "Netherlands",
                      "countriesId": 1,
                      "search": "Amsterdam",
                      "lat": 52.1234,
                      "lng": 12.1234,
                      "size": 100000,
                      "seaside": true
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return city by id.",
        "tags": [
          "cities"
        ]
      },
      "delete": {
        "operationId": "CitiesController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted city by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "City DTO",
                    "value": {
                      "id": 1,
                      "name": "Amsterdam",
                      "country": "Netherlands",
                      "countriesId": 1,
                      "search": "Amsterdam",
                      "lat": 52.1234,
                      "lng": 12.1234,
                      "size": 100000,
                      "seaside": true
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete city by id.",
        "tags": [
          "cities"
        ]
      }
    },
    "/years": {
      "post": {
        "operationId": "YearsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to create new city",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateYearDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "year": 2020
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "year": 2020
                    },
                    {
                      "year": 2021
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a year",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YearDto"
                },
                "examples": {
                  "single": {
                    "summary": "Year DTO",
                    "value": {
                      "id": 1,
                      "year": 2020
                    }
                  },
                  "multiple": {
                    "summary": "Count",
                    "value": {
                      "count": 10
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create new year.",
        "tags": [
          "years"
        ]
      },
      "get": {
        "operationId": "YearsController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved years.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/YearDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "Year DTO array",
                    "value": [
                      {
                        "id": 1,
                        "year": 2020
                      },
                      {
                        "id": 2,
                        "year": 2021
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Return all years.",
        "tags": [
          "years"
        ]
      }
    },
    "/years/{id}": {
      "get": {
        "operationId": "YearsController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved year by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YearDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "Year DTO",
                    "value": {
                      "id": 1,
                      "year": 2020
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return year by id.",
        "tags": [
          "years"
        ]
      }
    },
    "/products": {
      "post": {
        "operationId": "ProductsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to create new product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "name": "men shoes",
                    "categoryId": 5,
                    "unit": "1 pair",
                    "description": "1 pair of leather men shoes",
                    "type": "HISTORICAL"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "name": "men shoes",
                      "categoryId": 5,
                      "unit": "1 pair",
                      "description": "1 pair of leather men shoes",
                      "type": "HISTORICAL"
                    },
                    {
                      "name": "internet",
                      "categoryId": 6,
                      "unit": "monthly subscription",
                      "description": "1 month internet subscription",
                      "type": "HISTORICAL"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                },
                "examples": {
                  "single": {
                    "summary": "Product DTO",
                    "value": {
                      "id": 1,
                      "name": "men shoes",
                      "categoryId": 5,
                      "unit": "1 pair",
                      "description": "1 pair of leather men shoes",
                      "type": "HISTORICAL"
                    }
                  },
                  "multiple": {
                    "summary": "Count",
                    "value": {
                      "count": 10
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create the new product.",
        "tags": [
          "products"
        ]
      },
      "get": {
        "operationId": "ProductsController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved products.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "Product DTO array",
                    "value": [
                      {
                        "id": 1,
                        "name": "man shoes",
                        "categoryId": 5,
                        "unit": "1 pair",
                        "description": "1 pair of leather man shoes",
                        "type": "HISTORICAL"
                      },
                      {
                        "id": 2,
                        "name": "internet",
                        "categoryId": 6,
                        "unit": "monthly subscription",
                        "description": "1 month internet subscription",
                        "type": "HISTORICAL"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Return all products.",
        "tags": [
          "products"
        ]
      },
      "put": {
        "operationId": "ProductsController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to create new product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "id": 1,
                    "name": "men shoes",
                    "categoryId": 5,
                    "unit": "1 pair",
                    "description": "1 pair of leather men shoes",
                    "type": "HISTORICAL"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "id": 1,
                      "name": "men shoes",
                      "categoryId": 5,
                      "unit": "1 pair",
                      "description": "1 pair of leather men shoes",
                      "type": "HISTORICAL"
                    },
                    {
                      "id": 2,
                      "name": "internet",
                      "categoryId": 6,
                      "unit": "monthly subscription",
                      "description": "1 month internet subscription",
                      "type": "HISTORICAL"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated products.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDto"
                  }
                },
                "examples": {
                  "single": {
                    "summary": "Single updated product",
                    "value": {
                      "id": 1,
                      "name": "men shoes",
                      "categoryId": 5,
                      "unit": "1 pair",
                      "description": "1 pair of leather men shoes",
                      "type": "HISTORICAL"
                    }
                  },
                  "multiple": {
                    "summary": "Single updated product",
                    "value": [
                      {
                        "id": 1,
                        "name": "men shoes",
                        "categoryId": 5,
                        "unit": "1 pair",
                        "description": "1 pair of leather men shoes",
                        "type": "HISTORICAL"
                      },
                      {
                        "id": 2,
                        "name": "internet",
                        "categoryId": 6,
                        "unit": "monthly subscription",
                        "description": "1 month internet subscription",
                        "type": "HISTORICAL"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Update products",
        "tags": [
          "products"
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "operationId": "ProductsController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved product by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "Product DTO",
                    "value": {
                      "id": 1,
                      "name": "men shoes",
                      "categoryId": 5,
                      "unit": "1 pair",
                      "description": "1 pair of leather men shoes",
                      "type": "HISTORICAL"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return product by id.",
        "tags": [
          "products"
        ]
      },
      "delete": {
        "operationId": "ProductsController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted product by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "Product DTO",
                    "value": {
                      "id": 1,
                      "name": "men shoes",
                      "categoryId": 1,
                      "unit": "1 pair",
                      "description": "1 pair of leather men shoes",
                      "type": "HISTORICAL"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete product by id.",
        "tags": [
          "products"
        ]
      }
    },
    "/categories": {
      "post": {
        "operationId": "CategoriesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to create new category",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "name": "Markets"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "name": "Markets"
                    },
                    {
                      "name": "Restaurants"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                },
                "examples": {
                  "single": {
                    "summary": "Category DTO",
                    "value": {
                      "id": 1,
                      "name": "Markets"
                    }
                  },
                  "multiple": {
                    "summary": "Count",
                    "value": {
                      "count": 10
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create the new category.",
        "tags": [
          "categories"
        ]
      },
      "get": {
        "operationId": "CategoriesController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved categories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "Category DTO array",
                    "value": [
                      {
                        "id": 1,
                        "name": "Markets"
                      },
                      {
                        "id": 2,
                        "name": "Restaurants"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Return all categories.",
        "tags": [
          "categories"
        ]
      },
      "put": {
        "operationId": "CategoriesController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to update category",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "id": 1,
                    "name": "Markets"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "id": 1,
                      "name": "Markets"
                    },
                    {
                      "id": 2,
                      "name": "Restaurants"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated categories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDto"
                  }
                },
                "examples": {
                  "single": {
                    "summary": "Single updated category",
                    "value": {
                      "id": 1,
                      "name": "Markets"
                    }
                  },
                  "multiple": {
                    "summary": "Multiple updated categories",
                    "value": [
                      {
                        "id": 1,
                        "name": "Markets"
                      },
                      {
                        "id": 2,
                        "name": "Restaurants"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Update categories",
        "tags": [
          "categories"
        ]
      }
    },
    "/categories/{id}": {
      "get": {
        "operationId": "CategoriesController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved category by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "Category DTO",
                    "value": {
                      "id": 1,
                      "name": "Markets"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return category by id.",
        "tags": [
          "categories"
        ]
      },
      "delete": {
        "operationId": "CategoriesController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted category by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "category DTO",
                    "value": {
                      "id": 1,
                      "name": "Markets"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete category by id.",
        "tags": [
          "categories"
        ]
      }
    },
    "/prices": {
      "post": {
        "operationId": "PricesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to create new price",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePriceDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "price": 300,
                    "top": 500,
                    "bottom": 200,
                    "currency": "EUR",
                    "cityId": 1,
                    "productId": 1,
                    "yearId": 1,
                    "priceType": "HISTORICAL"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "price": 300,
                      "top": 500,
                      "bottom": 200,
                      "currency": "EUR",
                      "cityId": 1,
                      "productId": 1,
                      "yearId": 1,
                      "priceType": "HISTORICAL"
                    },
                    {
                      "price": 200,
                      "top": 500,
                      "bottom": 200,
                      "currency": "EUR",
                      "cityId": 1,
                      "productId": 1,
                      "yearId": 1,
                      "priceType": "HISTORICAL"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a price",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDto"
                },
                "examples": {
                  "single": {
                    "summary": "Price DTO",
                    "value": {
                      "id": 1,
                      "price": 300,
                      "top": 500,
                      "bottom": 200,
                      "currency": "EUR",
                      "cityId": 1,
                      "productId": 1,
                      "yearId": 1,
                      "priceType": "HISTORICAL",
                      "createdAt": "2025-03-26T19:50:30.809Z",
                      "updatedAt": "2025-03-26T19:50:30.809Z"
                    }
                  },
                  "multiple": {
                    "summary": "Count",
                    "value": {
                      "count": 100
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create the new price.",
        "tags": [
          "prices"
        ]
      },
      "get": {
        "operationId": "PricesController_getAll",
        "parameters": [
          {
            "name": "currency",
            "required": false,
            "in": "query",
            "schema": {
              "example": "EUR",
              "type": "string"
            }
          },
          {
            "name": "cityId",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "productId",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "yearId",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "priceType",
            "required": false,
            "in": "query",
            "schema": {
              "example": "HISTORICAL",
              "type": "string",
              "enum": [
                "CURRENT",
                "HISTORICAL"
              ]
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Items to skip",
            "schema": {
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Field to sort by",
            "schema": {
              "$ref": "#/components/schemas/Object"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "description": "Sort order: asc or desc",
            "schema": {
              "example": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved prices.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PricePaginationDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "price DTO array",
                    "value": {
                      "data": [
                        {
                          "id": 1,
                          "price": 300,
                          "top": 500,
                          "bottom": 200,
                          "currency": "EUR",
                          "cityId": 1,
                          "productId": 1,
                          "yearId": 1,
                          "priceType": "HISTORICAL",
                          "createdAt": "2025-03-26T19:50:30.809Z",
                          "updatedAt": "2025-03-26T19:50:30.809Z"
                        },
                        {
                          "id": 2,
                          "price": 400,
                          "top": 500,
                          "bottom": 200,
                          "currency": "EUR",
                          "cityId": 1,
                          "productId": 1,
                          "yearId": 1,
                          "priceType": "HISTORICAL",
                          "createdAt": "2025-03-26T19:50:30.809Z",
                          "updatedAt": "2025-03-26T19:50:30.809Z"
                        }
                      ],
                      "total": 100,
                      "limit": 10,
                      "page": 1
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return all prices.",
        "tags": [
          "prices"
        ]
      },
      "put": {
        "operationId": "PricesController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to update price",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePriceDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "id": 1,
                    "price": 300,
                    "currency": "EUR",
                    "cityId": 1,
                    "productId": 1,
                    "yearId": 1,
                    "priceType": "HISTORICAL"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "id": 1,
                      "price": 300,
                      "top": 500,
                      "bottom": 200,
                      "currency": "EUR",
                      "cityId": 1,
                      "productId": 1,
                      "yearId": 1,
                      "priceType": "HISTORICAL"
                    },
                    {
                      "id": 2,
                      "price": 300,
                      "top": 500,
                      "bottom": 200,
                      "currency": "EUR",
                      "cityId": 1,
                      "productId": 1,
                      "yearId": 1,
                      "priceType": "HISTORICAL"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated prices.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceDto"
                  }
                },
                "examples": {
                  "single": {
                    "summary": "Single updated price",
                    "value": {
                      "id": 1,
                      "price": 300,
                      "top": 500,
                      "bottom": 200,
                      "currency": "EUR",
                      "cityId": 1,
                      "productId": 1,
                      "yearId": 1,
                      "priceType": "HISTORICAL",
                      "createdAt": "2025-03-26T19:50:30.809Z",
                      "updatedAt": "2025-03-26T19:50:30.809Z"
                    }
                  },
                  "multiple": {
                    "summary": "Multiple updated prices",
                    "value": [
                      {
                        "id": 1,
                        "price": 300,
                        "top": 500,
                        "bottom": 200,
                        "currency": "EUR",
                        "cityId": 1,
                        "productId": 1,
                        "yearId": 1,
                        "priceType": "HISTORICAL",
                        "createdAt": "2025-03-26T19:50:30.809Z",
                        "updatedAt": "2025-03-26T19:50:30.809Z"
                      },
                      {
                        "id": 2,
                        "price": 400,
                        "top": 500,
                        "bottom": 200,
                        "currency": "EUR",
                        "cityId": 1,
                        "productId": 1,
                        "yearId": 1,
                        "priceType": "HISTORICAL",
                        "createdAt": "2025-03-26T19:50:30.809Z",
                        "updatedAt": "2025-03-26T19:50:30.809Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Update prices",
        "tags": [
          "prices"
        ]
      }
    },
    "/prices/unmarked-prices": {
      "get": {
        "operationId": "PricesController_getUnmarkedPrices",
        "parameters": [
          {
            "name": "country",
            "required": true,
            "in": "query",
            "description": "The country where the city is located",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priceType",
            "required": true,
            "in": "query",
            "schema": {
              "example": "HISTORICAL",
              "type": "string",
              "enum": [
                "CURRENT",
                "HISTORICAL"
              ]
            }
          },
          {
            "name": "yearId",
            "required": true,
            "in": "query",
            "description": "The id of the year (years table foreign key)",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of unmarked prices",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 123,
                      "price": 0.01,
                      "priceType": "CURRENT",
                      "cityId": 2,
                      "productId": 5,
                      "yearId": 2024,
                      "createdAt": "2025-01-01T00:00:00.000Z",
                      "updatedAt": "2025-01-01T00:00:00.000Z"
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get all prices with price = 0.01 for given country, year, and priceType",
        "tags": [
          "prices"
        ]
      }
    },
    "/prices/average-country-prices": {
      "get": {
        "operationId": "PricesController_getAverageCountryPrices",
        "parameters": [
          {
            "name": "country",
            "required": true,
            "in": "query",
            "description": "The country where the city is located",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priceType",
            "required": false,
            "in": "query",
            "schema": {
              "example": "HISTORICAL",
              "type": "string",
              "enum": [
                "CURRENT",
                "HISTORICAL"
              ]
            }
          },
          {
            "name": "yearId",
            "required": true,
            "in": "query",
            "description": "The id of the year (years table foreign key)",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Average prices for all products in the specified country",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PricePaginationDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "price DTO array",
                    "value": [
                      {
                        "country": "France",
                        "productId": 1,
                        "average_price": 15.5,
                        "yearId": 15
                      },
                      {
                        "country": "France",
                        "productId": 2,
                        "average_price": 23.1,
                        "yearId": 15
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Get average prices per product in a specific country",
        "tags": [
          "prices"
        ]
      }
    },
    "/prices/unique-cities": {
      "get": {
        "operationId": "PricesController_getUniqueCityIds",
        "parameters": [
          {
            "name": "priceType",
            "required": false,
            "in": "query",
            "schema": {
              "example": "HISTORICAL",
              "type": "string",
              "enum": [
                "CURRENT",
                "HISTORICAL"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of unique cityIds",
            "content": {
              "application/json": {
                "examples": {
                  "application/json": {
                    "summary": "List of unique cityIds",
                    "value": {
                      "data": [
                        1,
                        2,
                        3
                      ],
                      "count": 3
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get unique cityIds optionally filtered by priceType",
        "tags": [
          "prices"
        ]
      }
    },
    "/prices/{id}": {
      "get": {
        "operationId": "PricesController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved price by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "Price DTO",
                    "value": {
                      "id": 1,
                      "price": 300,
                      "top": 500,
                      "bottom": 200,
                      "currency": "EUR",
                      "cityId": 1,
                      "productId": 1,
                      "yearId": 1,
                      "priceType": "HISTORICAL",
                      "createdAt": "2025-03-26T19:50:30.809Z",
                      "updatedAt": "2025-03-26T19:50:30.809Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return price by id.",
        "tags": [
          "prices"
        ]
      },
      "delete": {
        "operationId": "PricesController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted price by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "Price DTO",
                    "value": {
                      "id": 1,
                      "price": 300,
                      "top": 500,
                      "bottom": 200,
                      "currency": "EUR",
                      "cityId": 1,
                      "productId": 1,
                      "yearId": 1,
                      "priceType": "HISTORICAL",
                      "createdAt": "2025-03-26T19:50:30.809Z",
                      "updatedAt": "2025-03-26T19:50:30.809Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete price by id.",
        "tags": [
          "prices"
        ]
      }
    },
    "/social_lifestyle": {
      "post": {
        "operationId": "SocialLifestyleController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to create new social lifestyle",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSocialLifestyleDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "cityId": 1,
                    "yearId": 1,
                    "avg_price": 200,
                    "currency": "EUR",
                    "type": "SOLO",
                    "created_at": "2025-03-26T19:50:30.809Z"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "cityId": 1,
                      "yearId": 1,
                      "avg_price": 200,
                      "currency": "EUR",
                      "type": "SOLO",
                      "created_at": "2025-03-26T19:50:30.809Z"
                    },
                    {
                      "cityId": 2,
                      "yearId": 1,
                      "avg_price": 200,
                      "currency": "EUR",
                      "type": "SOLO",
                      "created_at": "2025-03-26T19:50:30.809Z"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a social lifestyle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialLifestyleDto"
                },
                "examples": {
                  "single": {
                    "summary": "SOCIAL_LIFESTYLE DTO",
                    "value": {
                      "id": 1,
                      "cityId": 1,
                      "yearId": 1,
                      "avg_price": 200,
                      "currency": "EUR",
                      "type": "SOLO",
                      "created_at": "2025-03-26T19:50:30.809Z"
                    }
                  },
                  "multiple": {
                    "summary": "Count",
                    "value": {
                      "count": 100
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create the new social lifestyle.",
        "tags": [
          "social_lifestyle"
        ]
      },
      "get": {
        "operationId": "SocialLifestyleController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved social lifestyle.",
            "content": {
              "application/json": {
                "examples": {
                  "application/json": {
                    "summary": "Social lifestyles DTO array",
                    "value": {
                      "data": [
                        {
                          "id": 1,
                          "cityId": 1,
                          "yearId": 1,
                          "avg_price": 200,
                          "currency": "EUR",
                          "type": "SOLO",
                          "created_at": "2025-03-26T19:50:30.809Z"
                        },
                        {
                          "id": 2,
                          "cityId": 2,
                          "yearId": 1,
                          "avg_price": 200,
                          "currency": "EUR",
                          "type": "SOLO",
                          "created_at": "2025-03-26T19:50:30.809Z"
                        }
                      ],
                      "total": 100,
                      "limit": 10,
                      "page": 1
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return all social lifestyles.",
        "tags": [
          "social_lifestyle"
        ]
      },
      "put": {
        "operationId": "SocialLifestyleController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to update social lifestyle",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSocialLifestyleDto"
              },
              "examples": {
                "multiple": {
                  "value": [
                    {
                      "id": 1,
                      "cityId": 1,
                      "yearId": 1,
                      "avg_price": 200,
                      "currency": "EUR",
                      "type": "SOLO",
                      "created_at": "2025-03-26T19:50:30.809Z"
                    },
                    {
                      "id": 2,
                      "cityId": 2,
                      "yearId": 1,
                      "avg_price": 200,
                      "currency": "EUR",
                      "type": "SOLO",
                      "created_at": "2025-03-26T19:50:30.809Z"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated social lifestyle.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SocialLifestyleDto"
                  }
                },
                "examples": {
                  "multiple": {
                    "summary": "Multiple updated social lifestyle",
                    "value": [
                      {
                        "id": 1,
                        "cityId": 1,
                        "yearId": 1,
                        "avg_price": 200,
                        "currency": "EUR",
                        "type": "SOLO",
                        "created_at": "2025-03-26T19:50:30.809Z"
                      },
                      {
                        "id": 2,
                        "cityId": 2,
                        "yearId": 1,
                        "avg_price": 200,
                        "currency": "EUR",
                        "type": "SOLO",
                        "created_at": "2025-03-26T19:50:30.809Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Update social lifestyle",
        "tags": [
          "social_lifestyle"
        ]
      }
    },
    "/social_lifestyle/{id}": {
      "get": {
        "operationId": "SocialLifestyleController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved social lifestyle by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialLifestyleDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "Social Lifestyle DTO",
                    "value": {
                      "id": 1,
                      "cityId": 1,
                      "yearId": 1,
                      "avg_price": 200,
                      "currency": "EUR",
                      "type": "SOLO",
                      "created_at": "2025-03-26T19:50:30.809Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return social lifestyle by id.",
        "tags": [
          "social_lifestyle"
        ]
      },
      "delete": {
        "operationId": "SocialLifestyleController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted social lifestyle by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialLifestyleDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "Social Lifestyle DTO",
                    "value": {
                      "id": 1,
                      "cityId": 1,
                      "yearId": 1,
                      "avg_price": 200,
                      "currency": "EUR",
                      "type": "SOLO",
                      "created_at": "2025-03-26T19:50:30.809Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete social lifestyle by id.",
        "tags": [
          "social_lifestyle"
        ]
      }
    },
    "/crimes": {
      "post": {
        "operationId": "CrimesController_createRanks",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Crime rank data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCrimeRankDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "year_id": 16,
                    "city_id": 1,
                    "crime_aspect_id": 2,
                    "rank": 65.2
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "year_id": 16,
                      "city_id": 1,
                      "crime_aspect_id": 1,
                      "rank": 70
                    },
                    {
                      "year_id": 16,
                      "city_id": 1,
                      "crime_aspect_id": 2,
                      "rank": 65
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created crime ranks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CrimeRankDto"
                  }
                },
                "examples": {
                  "single": {
                    "summary": "Single created crime rank",
                    "value": {
                      "id": 1,
                      "year_id": 16,
                      "city_id": 1,
                      "crime_aspect_id": 2,
                      "rank": 65.2
                    }
                  },
                  "multiple": {
                    "summary": "Count",
                    "value": {
                      "count": 10
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create new crime ranks",
        "tags": [
          "crimes"
        ]
      },
      "put": {
        "operationId": "CrimesController_updateRanks",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Updated crime rank data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCrimeRankDto"
              },
              "examples": {
                "single": {
                  "value": [
                    {
                      "id": 1,
                      "year_id": 16,
                      "city_id": 1,
                      "crime_aspect_id": 2,
                      "rank": 65.2
                    },
                    {
                      "id": 2,
                      "year_id": 16,
                      "city_id": 1,
                      "crime_aspect_id": 3,
                      "rank": 15.2
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated crime ranks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CrimeRankDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "updated crime rank",
                    "value": [
                      {
                        "id": 1,
                        "year_id": 16,
                        "city_id": 1,
                        "crime_aspect_id": 2,
                        "rank": 65.2,
                        "created_at": "2025-05-26T18:49:49.442Z"
                      },
                      {
                        "id": 2,
                        "year_id": 16,
                        "city_id": 1,
                        "crime_aspect_id": 3,
                        "rank": 15.2,
                        "created_at": "2025-05-26T18:49:49.442Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Update existing crime ranks",
        "tags": [
          "crimes"
        ]
      },
      "get": {
        "operationId": "CrimesController_getAllRanks",
        "parameters": [
          {
            "name": "cityId",
            "required": false,
            "in": "query",
            "description": "Filter by city ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "yearId",
            "required": false,
            "in": "query",
            "description": "Filter by year ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "crimeAspectId",
            "required": false,
            "in": "query",
            "description": "Filter by crime aspect ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rankGte",
            "required": false,
            "in": "query",
            "description": "Filter ranks greater than or equal to this value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rankLte",
            "required": false,
            "in": "query",
            "description": "Filter ranks less than or equal to this value",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All crime ranks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CrimeRankDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "updated crime rank",
                    "value": [
                      {
                        "id": 1,
                        "year_id": 16,
                        "city_id": 1,
                        "crime_aspect_id": 2,
                        "rank": 65.2,
                        "created_at": "2025-05-26T18:49:49.442Z"
                      },
                      {
                        "id": 2,
                        "year_id": 16,
                        "city_id": 1,
                        "crime_aspect_id": 3,
                        "rank": 15.2,
                        "created_at": "2025-05-26T18:49:49.442Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Get all crime ranks with optional filters",
        "tags": [
          "crimes"
        ]
      }
    },
    "/crimes/summary": {
      "get": {
        "operationId": "CrimesController_getCitySafetySummary",
        "parameters": [
          {
            "name": "cityId",
            "required": true,
            "in": "query",
            "description": "City ID to query",
            "schema": {
              "example": 199,
              "type": "number"
            }
          },
          {
            "name": "yearId",
            "required": true,
            "in": "query",
            "description": "Year ID to query",
            "schema": {
              "example": 16,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Calculated safety summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrimeSafetySummaryDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "Safety Summary",
                    "value": {
                      "overallCrimeConcernIndex": 58.79,
                      "personalSafetyScore": 43.71,
                      "crimeEscalationIndicator": 73.2
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get calculated safety summary for a city and year",
        "tags": [
          "crimes"
        ]
      }
    },
    "/crimes/average": {
      "get": {
        "operationId": "CrimesController_getAverageCrimeRank",
        "parameters": [
          {
            "name": "aspectId",
            "required": true,
            "in": "query",
            "description": "Crime aspect ID to query",
            "schema": {
              "example": 199,
              "type": "number"
            }
          },
          {
            "name": "yearId",
            "required": true,
            "in": "query",
            "description": "Year ID to query",
            "schema": {
              "example": 16,
              "type": "number"
            }
          },
          {
            "name": "country",
            "required": false,
            "in": "query",
            "description": "Country that we need average for.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Get average rank for specific crime aspect and year, optionally filtered by country",
        "tags": [
          "crimes"
        ]
      }
    },
    "/crimes/missing-cities": {
      "get": {
        "operationId": "CrimesController_getMissingCities",
        "parameters": [
          {
            "name": "count",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "yearId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Get cities with incomplete crime rank data",
        "tags": [
          "crimes"
        ]
      }
    },
    "/crimes/aspects": {
      "post": {
        "operationId": "CrimesController_createAspect",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Crime aspect to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCrimeAspectDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "name": "Assault"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Crime aspect created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrimeAspectDto"
                },
                "examples": {
                  "single": {
                    "summary": "New Crime aspect created",
                    "value": {
                      "id": 2,
                      "name": "Crime increasing in the past 5 years",
                      "created_at": "2025-05-26T18:49:49.442Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create new crime aspect",
        "tags": [
          "crimes"
        ]
      },
      "get": {
        "operationId": "CrimesController_getAllAspects",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of all crime aspects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CrimeAspectDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "Example response",
                    "value": [
                      {
                        "id": 1,
                        "name": "Robbery",
                        "created_at": "2025-05-26T18:49:49.442Z"
                      },
                      {
                        "id": 2,
                        "name": "Assault",
                        "created_at": "2025-05-26T18:49:49.442Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Get all crime aspects",
        "tags": [
          "crimes"
        ]
      }
    },
    "/crimes/aspects/{id}": {
      "delete": {
        "operationId": "CrimesController_deleteAspect",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Crime aspect deleted",
            "content": {
              "application/json": {
                "examples": {
                  "application/json": {
                    "summary": "Deleted Crime aspect",
                    "value": {
                      "id": 2,
                      "name": "Crime increasing in the past 5 years",
                      "created_at": "2025-05-26T18:49:49.442Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete crime aspect by ID",
        "tags": [
          "crimes"
        ]
      }
    },
    "/weathers": {
      "post": {
        "operationId": "WeathersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWeathersDto"
              },
              "examples": {
                "application/json": {
                  "summary": "Create weather data for a city",
                  "value": {
                    "cityId": 1,
                    "sunshine": 250,
                    "rain": 100,
                    "cold": 60,
                    "heat": 90,
                    "cold_extremes": 5,
                    "heat_extremes": 3,
                    "humidity": 75,
                    "severe": "Low risk of storms",
                    "lowest": -10,
                    "highest": 35
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Weather record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeathersDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "Created weather record",
                    "value": {
                      "id": 1,
                      "cityId": 1,
                      "sunshine": 250,
                      "rain": 100,
                      "cold": 60,
                      "heat": 90,
                      "cold_extremes": 5,
                      "heat_extremes": 3,
                      "humidity": 75,
                      "severe": "Low risk of storms",
                      "lowest": -10,
                      "highest": 35,
                      "created_at": "2025-05-30T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a new weather record",
        "tags": [
          "weathers"
        ]
      },
      "get": {
        "operationId": "WeathersController_getAll",
        "parameters": [
          {
            "name": "country",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of weather records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeathersDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "List of WeathersDto",
                    "value": [
                      {
                        "id": 1,
                        "cityId": 1,
                        "sunshine": 250,
                        "rain": 100,
                        "cold": 60,
                        "heat": 90,
                        "cold_extremes": 5,
                        "heat_extremes": 3,
                        "humidity": 75,
                        "severe": "Low risk of storms",
                        "lowest": -10,
                        "highest": 35,
                        "created_at": "2025-05-30T12:00:00.000Z"
                      },
                      {
                        "id": 1,
                        "cityId": 1,
                        "sunshine": 250,
                        "rain": 100,
                        "cold": 60,
                        "heat": 90,
                        "cold_extremes": 5,
                        "heat_extremes": 3,
                        "humidity": 75,
                        "severe": "Low risk of storms",
                        "lowest": -10,
                        "highest": 35,
                        "created_at": "2025-05-30T12:00:00.000Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Get all weather records",
        "tags": [
          "weathers"
        ]
      },
      "put": {
        "operationId": "WeathersController_updateWeathers",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Array of weather records to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateWeathersDto"
                }
              },
              "examples": {
                "application/json": {
                  "summary": "Updated weather record",
                  "value": [
                    {
                      "id": 1,
                      "cityId": 1,
                      "sunshine": 250,
                      "rain": 100,
                      "cold": 60,
                      "heat": 90,
                      "cold_extremes": 5,
                      "heat_extremes": 3,
                      "humidity": 75,
                      "severe": "Low risk of storms",
                      "lowest": -10,
                      "highest": 35,
                      "created_at": "2025-05-30T12:00:00.000Z"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated weather records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeathersDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "Updated weather record",
                    "value": [
                      {
                        "id": 1,
                        "cityId": 1,
                        "sunshine": 250,
                        "rain": 100,
                        "cold": 60,
                        "heat": 90,
                        "cold_extremes": 5,
                        "heat_extremes": 3,
                        "humidity": 75,
                        "severe": "Low risk of storms",
                        "lowest": -10,
                        "highest": 35,
                        "created_at": "2025-05-30T12:00:00.000Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Update existing weather records",
        "tags": [
          "weathers"
        ]
      }
    },
    "/weathers/city/{cityId}": {
      "get": {
        "operationId": "WeathersController_getByCity",
        "parameters": [
          {
            "name": "cityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Weather records for the specified city",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeathersDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "WeathersDto with query cityId",
                    "value": {
                      "id": 1,
                      "cityId": 1,
                      "sunshine": 250,
                      "rain": 100,
                      "cold": 60,
                      "heat": 90,
                      "cold_extremes": 5,
                      "heat_extremes": 3,
                      "humidity": 75,
                      "severe": "Low risk of storms",
                      "lowest": -10,
                      "highest": 35,
                      "created_at": "2025-05-30T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get weather records by city ID",
        "tags": [
          "weathers"
        ]
      }
    },
    "/weathers/{id}": {
      "delete": {
        "operationId": "WeathersController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted weather record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeathersDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "Deleted weather record",
                    "value": {
                      "id": 1,
                      "cityId": 1,
                      "sunshine": 250,
                      "rain": 100,
                      "cold": 60,
                      "heat": 90,
                      "cold_extremes": 5,
                      "heat_extremes": 3,
                      "humidity": 75,
                      "severe": "Low risk of storms",
                      "lowest": -10,
                      "highest": 35,
                      "created_at": "2025-05-30T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a weather record by ID",
        "tags": [
          "weathers"
        ]
      }
    },
    "/city-context": {
      "post": {
        "operationId": "CityContextController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to create new price",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CityContextDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "cityId": 1,
                    "climate": "string",
                    "tourismLevel": "string",
                    "expatCommunity": "string",
                    "natureAccess": "string",
                    "localLifestyle": "string",
                    "seasonality": "string",
                    "cultureHighlights": "string",
                    "sportsAndActivities": "string",
                    "detailedStory": "string"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "cityId": 1,
                      "climate": "string",
                      "tourismLevel": "string",
                      "expatCommunity": "string",
                      "natureAccess": "string",
                      "localLifestyle": "string",
                      "seasonality": "string",
                      "cultureHighlights": "string",
                      "sportsAndActivities": "string",
                      "detailedStory": "string"
                    },
                    {
                      "cityId": 1,
                      "climate": "string",
                      "tourismLevel": "string",
                      "expatCommunity": "string",
                      "natureAccess": "string",
                      "localLifestyle": "string",
                      "seasonality": "string",
                      "cultureHighlights": "string",
                      "sportsAndActivities": "string",
                      "detailedStory": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a city context",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityContextDto"
                },
                "examples": {
                  "single": {
                    "summary": "CityContext DTO",
                    "value": {
                      "id": 1,
                      "cityId": 1,
                      "climate": "string",
                      "tourismLevel": "string",
                      "expatCommunity": "string",
                      "natureAccess": "string",
                      "localLifestyle": "string",
                      "seasonality": "string",
                      "cultureHighlights": "string",
                      "sportsAndActivities": "string",
                      "detailedStory": "string",
                      "created_at": "2025-03-26T19:50:30.809Z",
                      "updated_at": "2025-03-26T19:50:30.809Z"
                    }
                  },
                  "multiple": {
                    "summary": "Count",
                    "value": {
                      "count": 100
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create one or many city context entries",
        "tags": [
          "city-context"
        ]
      },
      "get": {
        "operationId": "CityContextController_getAll",
        "parameters": [
          {
            "name": "cityId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of CityContextDto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityContextDto"
                },
                "examples": {
                  "multiple": {
                    "summary": "CityContextDto array",
                    "value": {
                      "data": [
                        {
                          "id": 1,
                          "cityId": 1,
                          "climate": "string",
                          "tourismLevel": "string",
                          "expatCommunity": "string",
                          "natureAccess": "string",
                          "localLifestyle": "string",
                          "seasonality": "string",
                          "cultureHighlights": "string",
                          "sportsAndActivities": "string",
                          "detailedStory": "string",
                          "created_at": "2025-03-26T19:50:30.809Z",
                          "updated_at": "2025-03-26T19:50:30.809Z"
                        },
                        {
                          "id": 2,
                          "cityId": 2,
                          "climate": "string",
                          "tourismLevel": "string",
                          "expatCommunity": "string",
                          "natureAccess": "string",
                          "localLifestyle": "string",
                          "seasonality": "string",
                          "cultureHighlights": "string",
                          "sportsAndActivities": "string",
                          "detailedStory": "string",
                          "created_at": "2025-03-26T19:50:30.809Z",
                          "updated_at": "2025-03-26T19:50:30.809Z"
                        }
                      ],
                      "total": 0,
                      "limit": 10,
                      "offset": 0
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get all city context entries with optional filters",
        "tags": [
          "city-context"
        ]
      },
      "put": {
        "operationId": "CityContextController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to update new city context",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CityContextDto"
              },
              "examples": {
                "multiple": {
                  "value": [
                    {
                      "id": 1,
                      "cityId": 1,
                      "climate": "string",
                      "tourismLevel": "string",
                      "expatCommunity": "string",
                      "natureAccess": "string",
                      "localLifestyle": "string",
                      "seasonality": "string",
                      "cultureHighlights": "string",
                      "sportsAndActivities": "string",
                      "detailedStory": "string",
                      "created_at": "2025-03-26T19:50:30.809Z",
                      "updated_at": "2025-03-26T19:50:30.809Z"
                    },
                    {
                      "id": 2,
                      "cityId": 2,
                      "climate": "string",
                      "tourismLevel": "string",
                      "expatCommunity": "string",
                      "natureAccess": "string",
                      "localLifestyle": "string",
                      "seasonality": "string",
                      "cultureHighlights": "string",
                      "sportsAndActivities": "string",
                      "detailedStory": "string",
                      "created_at": "2025-03-26T19:50:30.809Z",
                      "updated_at": "2025-03-26T19:50:30.809Z"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated a city context",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityContextDto"
                },
                "examples": {
                  "multiple": {
                    "summary": "Update CityContextDto",
                    "value": [
                      {
                        "id": 1,
                        "cityId": 1,
                        "climate": "string",
                        "tourismLevel": "string",
                        "expatCommunity": "string",
                        "natureAccess": "string",
                        "localLifestyle": "string",
                        "seasonality": "string",
                        "cultureHighlights": "string",
                        "sportsAndActivities": "string",
                        "detailedStory": "string",
                        "created_at": "2025-03-26T19:50:30.809Z",
                        "updated_at": "2025-03-26T19:50:30.809Z"
                      },
                      {
                        "id": 2,
                        "cityId": 2,
                        "climate": "string",
                        "tourismLevel": "string",
                        "expatCommunity": "string",
                        "natureAccess": "string",
                        "localLifestyle": "string",
                        "seasonality": "string",
                        "cultureHighlights": "string",
                        "sportsAndActivities": "string",
                        "detailedStory": "string",
                        "created_at": "2025-03-26T19:50:30.809Z",
                        "updated_at": "2025-03-26T19:50:30.809Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Update one or many city context entries",
        "tags": [
          "city-context"
        ]
      }
    },
    "/city-context/{id}": {
      "get": {
        "operationId": "CityContextController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "City context entry",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityContextDto"
                },
                "examples": {
                  "single": {
                    "summary": "CityContextDto object",
                    "value": {
                      "id": 1,
                      "cityId": 1,
                      "climate": "string",
                      "tourismLevel": "string",
                      "expatCommunity": "string",
                      "natureAccess": "string",
                      "localLifestyle": "string",
                      "seasonality": "string",
                      "cultureHighlights": "string",
                      "sportsAndActivities": "string",
                      "detailedStory": "string",
                      "created_at": "2025-03-26T19:50:30.809Z",
                      "updated_at": "2025-03-26T19:50:30.809Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get city context by ID",
        "tags": [
          "city-context"
        ]
      },
      "delete": {
        "operationId": "CityContextController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "City context delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityContextDto"
                },
                "examples": {
                  "single": {
                    "summary": "CityContextDto object",
                    "value": {
                      "id": 1,
                      "cityId": 1,
                      "climate": "string",
                      "tourismLevel": "string",
                      "expatCommunity": "string",
                      "natureAccess": "string",
                      "localLifestyle": "string",
                      "seasonality": "string",
                      "cultureHighlights": "string",
                      "sportsAndActivities": "string",
                      "detailedStory": "string",
                      "created_at": "2025-03-26T19:50:30.809Z",
                      "updated_at": "2025-03-26T19:50:30.809Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete city context by ID",
        "tags": [
          "city-context"
        ]
      }
    },
    "/city-context/city/{cityId}": {
      "get": {
        "operationId": "CityContextController_getByCityId",
        "parameters": [
          {
            "name": "cityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "City context entry",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityContextDto"
                },
                "examples": {
                  "single": {
                    "summary": "CityContextDto object",
                    "value": {
                      "id": 1,
                      "cityId": 1,
                      "climate": "string",
                      "tourismLevel": "string",
                      "expatCommunity": "string",
                      "natureAccess": "string",
                      "localLifestyle": "string",
                      "seasonality": "string",
                      "cultureHighlights": "string",
                      "sportsAndActivities": "string",
                      "detailedStory": "string",
                      "created_at": "2025-03-26T19:50:30.809Z",
                      "updated_at": "2025-03-26T19:50:30.809Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get city context by ID",
        "tags": [
          "city-context"
        ]
      }
    },
    "/city-feel": {
      "post": {
        "operationId": "CityFeelController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "City feel creation payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CityFeelDto"
                }
              },
              "examples": {
                "single": {
                  "value": {
                    "cityId": 1,
                    "budget": 1880.8,
                    "rank": 1,
                    "tags": "tag"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "cityId": 1,
                      "budget": 1880.8,
                      "rank": 1,
                      "tags": "tag"
                    },
                    {
                      "cityId": 2,
                      "budget": 2880.8,
                      "rank": 1,
                      "tags": "tag"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created city feel(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityFeelDto"
                },
                "examples": {
                  "single": {
                    "summary": "CityContext DTO",
                    "value": {
                      "id": 1,
                      "cityId": 1,
                      "budget": 1880.8,
                      "rank": 1,
                      "tags": "tag",
                      "created_at": "2025-03-26T19:50:30.809Z"
                    }
                  },
                  "multiple": {
                    "summary": "Count",
                    "value": {
                      "count": 100
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create one or many city feel entries",
        "tags": [
          "city-feel"
        ]
      },
      "get": {
        "operationId": "CityFeelController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of CityFeelDto with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CityFeelDto"
                  }
                },
                "examples": {
                  "multiple": {
                    "summary": "Count",
                    "value": [
                      {
                        "id": 1,
                        "cityId": 1,
                        "budget": 1880.8,
                        "rank": 1,
                        "tags": "tag",
                        "created_at": "2025-03-26T19:50:30.809Z"
                      },
                      {
                        "id": 1,
                        "cityId": 1,
                        "budget": 1880.8,
                        "rank": 1,
                        "tags": "tag",
                        "created_at": "2025-03-26T19:50:30.809Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Get all city feel entries with optional filters",
        "tags": [
          "city-feel"
        ]
      },
      "put": {
        "operationId": "CityFeelController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "City feel update payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CityFeelDto"
                }
              },
              "examples": {
                "multiple": {
                  "value": [
                    {
                      "id": 1,
                      "cityId": 1,
                      "budget": 1880.8,
                      "rank": 1,
                      "tags": "tag",
                      "created_at": "2025-03-26T19:50:30.809Z"
                    },
                    {
                      "id": 2,
                      "cityId": 2,
                      "budget": 1880.8,
                      "rank": 1,
                      "tags": "tag",
                      "created_at": "2025-03-26T19:50:30.809Z"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated city feel(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CityFeelDto"
                  }
                },
                "examples": {
                  "multiple": {
                    "summary": "CityContext DTO",
                    "value": [
                      {
                        "id": 1,
                        "cityId": 1,
                        "budget": 1880.8,
                        "rank": 1,
                        "tags": "tag",
                        "created_at": "2025-03-26T19:50:30.809Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Update one or many city feel entries",
        "tags": [
          "city-feel"
        ]
      }
    },
    "/city-feel/{cityId}": {
      "get": {
        "operationId": "CityFeelController_getByCityId",
        "parameters": [
          {
            "name": "cityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CityFeelDto object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityFeelDto"
                },
                "examples": {
                  "single": {
                    "summary": "CityContext DTO",
                    "value": {
                      "id": 1,
                      "cityId": 1,
                      "budget": 1880.8,
                      "rank": 1,
                      "tags": "tag",
                      "created_at": "2025-03-26T19:50:30.809Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get city feel by cityId",
        "tags": [
          "city-feel"
        ]
      },
      "delete": {
        "operationId": "CityFeelController_delete",
        "parameters": [
          {
            "name": "cityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted city feel entry",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityFeelDto"
                },
                "examples": {
                  "single": {
                    "summary": "CityContext DTO",
                    "value": {
                      "id": 1,
                      "cityId": 1,
                      "budget": 1880.8,
                      "rank": 1,
                      "tags": "tag",
                      "created_at": "2025-03-26T19:50:30.809Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete city feel by cityId",
        "tags": [
          "city-feel"
        ]
      }
    },
    "/specials/subscriber": {
      "post": {
        "operationId": "SpecialsController_createSubscriber",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "specials"
        ]
      }
    },
    "/countries": {
      "post": {
        "operationId": "CountriesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to create new country",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCountryDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "name": "Italy"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "name": "Italy"
                    },
                    {
                      "name": "Spain"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryDto"
                },
                "examples": {
                  "single": {
                    "summary": "Country DTO",
                    "value": {
                      "id": 1,
                      "name": "Italy"
                    }
                  },
                  "multiple": {
                    "summary": "Count",
                    "value": {
                      "count": 10
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create the new country.",
        "tags": [
          "countries"
        ]
      },
      "get": {
        "operationId": "CountriesController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved countries.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "Country DTO array",
                    "value": [
                      {
                        "id": 1,
                        "name": "Italy"
                      },
                      {
                        "id": 2,
                        "name": "Spain"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Return all countries.",
        "tags": [
          "countries"
        ]
      },
      "put": {
        "operationId": "CountriesController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to update country",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCountryDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "id": 1,
                    "name": "Italy"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "id": 1,
                      "name": "Italy"
                    },
                    {
                      "id": 2,
                      "name": "Spain"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated countries.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryDto"
                  }
                },
                "examples": {
                  "single": {
                    "summary": "Single updated country",
                    "value": {
                      "id": 1,
                      "name": "Italy"
                    }
                  },
                  "multiple": {
                    "summary": "Multiple updated countries",
                    "value": [
                      {
                        "id": 1,
                        "name": "Italy"
                      },
                      {
                        "id": 2,
                        "name": "Spain"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Update countries",
        "tags": [
          "countries"
        ]
      }
    },
    "/countries/{id}": {
      "get": {
        "operationId": "CountriesController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved country by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "Country DTO",
                    "value": {
                      "id": 1,
                      "name": "Italy"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return country by id.",
        "tags": [
          "countries"
        ]
      },
      "delete": {
        "operationId": "CountriesController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted country by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "country DTO",
                    "value": {
                      "id": 1,
                      "name": "Italy"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete country by id.",
        "tags": [
          "countries"
        ]
      }
    },
    "/aspect": {
      "post": {
        "operationId": "AspectController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to create new aspect",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAspectDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "name": "insurance",
                    "field": "healthcare"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "name": "insurance",
                      "field": "healthcare"
                    },
                    {
                      "name": "insurance_pricing",
                      "field": "healthcare"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a aspect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AspectDto"
                },
                "examples": {
                  "single": {
                    "summary": "Aspect DTO",
                    "value": {
                      "id": 1,
                      "name": "insurance",
                      "field": "healthcare"
                    }
                  },
                  "multiple": {
                    "summary": "Count",
                    "value": {
                      "count": 10
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create the new aspect.",
        "tags": [
          "aspect"
        ]
      },
      "get": {
        "operationId": "AspectController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved aspects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AspectDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "Aspect DTO array",
                    "value": [
                      {
                        "id": 1,
                        "name": "insurance",
                        "field": "healthcare"
                      },
                      {
                        "id": 2,
                        "name": "insurance_pricing",
                        "field": "healthcare"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Return all aspects.",
        "tags": [
          "aspect"
        ]
      },
      "put": {
        "operationId": "AspectController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to update aspect",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAspectDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "id": 1,
                    "name": "insurance",
                    "field": "healthcare"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "id": 1,
                      "name": "insurance",
                      "field": "healthcare"
                    },
                    {
                      "id": 2,
                      "name": "insurance_pricing",
                      "field": "healthcare"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated aspects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AspectDto"
                  }
                },
                "examples": {
                  "single": {
                    "summary": "Single updated aspect",
                    "value": {
                      "id": 1,
                      "name": "insurance",
                      "field": "healthcare"
                    }
                  },
                  "multiple": {
                    "summary": "Multiple updated aspects",
                    "value": [
                      {
                        "id": 1,
                        "name": "insurance",
                        "field": "healthcare"
                      },
                      {
                        "id": 2,
                        "name": "insurance_pricing",
                        "field": "healthcare"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Update aspects",
        "tags": [
          "aspect"
        ]
      }
    },
    "/aspect/{id}": {
      "get": {
        "operationId": "AspectController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved aspect by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AspectDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "Aspect DTO",
                    "value": {
                      "id": 1,
                      "name": "insurance",
                      "field": "healthcare"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return aspect by id.",
        "tags": [
          "aspect"
        ]
      },
      "delete": {
        "operationId": "AspectController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted aspect by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AspectDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "aspect DTO",
                    "value": {
                      "id": 1,
                      "name": "insurance",
                      "field": "healthcare"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete aspect by id.",
        "tags": [
          "aspect"
        ]
      }
    },
    "/definition": {
      "post": {
        "operationId": "DefinitionController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to create new definition",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDefinitionDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "label": "Tier 3 – SSN Only",
                    "type": "text_list",
                    "aspectId": 1
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "label": "Tier 3 – SSN Only",
                      "type": "text_list",
                      "aspectId": 1
                    },
                    {
                      "label": "Tier 2 – SSN + Supplemental Private",
                      "type": "text_list",
                      "aspectId": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a definition",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefinitionDto"
                },
                "examples": {
                  "single": {
                    "summary": "Definition DTO",
                    "value": {
                      "id": 1,
                      "label": "Tier 3 – SSN Only",
                      "type": "text_list",
                      "aspectId": 1
                    }
                  },
                  "multiple": {
                    "summary": "Count",
                    "value": {
                      "count": 10
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create the new definition.",
        "tags": [
          "definition"
        ]
      },
      "get": {
        "operationId": "DefinitionController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved definitions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DefinitionDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "Definition DTO array",
                    "value": [
                      {
                        "id": 1,
                        "label": "Tier 3 – SSN Only",
                        "type": "text_list",
                        "aspectId": 1
                      },
                      {
                        "id": 2,
                        "label": "Tier 2 – SSN + Supplemental Private",
                        "type": "text_list",
                        "aspectId": 1
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Return all definitions.",
        "tags": [
          "definition"
        ]
      },
      "put": {
        "operationId": "DefinitionController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to update definition",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDefinitionDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "id": 1,
                    "label": "Tier 3 – SSN Only",
                    "type": "text_list",
                    "aspectId": 1
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "id": 1,
                      "label": "Tier 3 – SSN Only",
                      "type": "text_list",
                      "aspectId": 1
                    },
                    {
                      "id": 2,
                      "label": "Tier 2 – SSN + Supplemental Private",
                      "type": "text_list",
                      "aspectId": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated definitions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DefinitionDto"
                  }
                },
                "examples": {
                  "single": {
                    "summary": "Single updated definition",
                    "value": {
                      "id": 1,
                      "label": "Tier 3 – SSN Only",
                      "type": "text_list",
                      "aspectId": 1
                    }
                  },
                  "multiple": {
                    "summary": "Multiple updated definitions",
                    "value": [
                      {
                        "id": 1,
                        "label": "Tier 3 – SSN Only",
                        "type": "text_list",
                        "aspectId": 1
                      },
                      {
                        "id": 2,
                        "label": "Tier 2 – SSN + Supplemental Private",
                        "type": "text_list",
                        "aspectId": 1
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Update definitions",
        "tags": [
          "definition"
        ]
      }
    },
    "/definition/{id}": {
      "get": {
        "operationId": "DefinitionController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved definition by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefinitionDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "Definition DTO",
                    "value": {
                      "id": 1,
                      "label": "Tier 3 – SSN Only",
                      "type": "text_list",
                      "aspectId": 1
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return definition by id.",
        "tags": [
          "definition"
        ]
      },
      "delete": {
        "operationId": "DefinitionController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted definition by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefinitionDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "definition DTO",
                    "value": {
                      "id": 1,
                      "label": "Tier 3 – SSN Only",
                      "type": "text_list",
                      "aspectId": 1
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete definition by id.",
        "tags": [
          "definition"
        ]
      }
    },
    "/def_value": {
      "post": {
        "operationId": "DefValueController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to create new def value",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDefValueDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "definitionId": 1,
                    "cityId": null,
                    "countryId": 1,
                    "value": "Assigned general practitioner (GP / medico di base)",
                    "score": null,
                    "comment": null,
                    "note": null,
                    "type": "bullet",
                    "visible": true,
                    "created_at": "2025-03-26T19:50:30.809Z",
                    "updated_at": "2025-03-26T19:50:30.809Z"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "definitionId": 1,
                      "cityId": null,
                      "countryId": 1,
                      "value": "Assigned general practitioner (GP / medico di base)",
                      "score": null,
                      "comment": null,
                      "note": null,
                      "type": "bullet",
                      "visible": true,
                      "created_at": "2025-03-26T19:50:30.809Z",
                      "updated_at": "2025-03-26T19:50:30.809Z"
                    },
                    {
                      "definitionId": 1,
                      "cityId": null,
                      "countryId": 1,
                      "value": "Access to public specialists (with referral)",
                      "score": null,
                      "comment": null,
                      "note": null,
                      "type": "bullet",
                      "visible": true,
                      "created_at": "2025-03-26T19:50:30.809Z",
                      "updated_at": "2025-03-26T19:50:30.809Z"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a def value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefValueDto"
                },
                "examples": {
                  "single": {
                    "summary": "Def value DTO",
                    "value": {
                      "id": 1,
                      "definitionId": 1,
                      "cityId": null,
                      "countryId": 1,
                      "value": "Assigned general practitioner (GP / medico di base)",
                      "score": null,
                      "comment": null,
                      "note": null,
                      "type": "bullet",
                      "visible": true,
                      "created_at": "2025-03-26T19:50:30.809Z",
                      "updated_at": "2025-03-26T19:50:30.809Z"
                    }
                  },
                  "multiple": {
                    "summary": "Count",
                    "value": {
                      "count": 10
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create the new def value.",
        "tags": [
          "def_value"
        ]
      },
      "get": {
        "operationId": "DefValueController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved def values.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DefValueDto"
                  }
                },
                "examples": {
                  "application/json": {
                    "summary": "Def value DTO array",
                    "value": [
                      {
                        "id": 1,
                        "definitionId": 1,
                        "cityId": null,
                        "countryId": 1,
                        "value": "Assigned general practitioner (GP / medico di base)",
                        "score": null,
                        "comment": null,
                        "note": null,
                        "type": "bullet",
                        "visible": true,
                        "created_at": "2025-03-26T19:50:30.809Z",
                        "updated_at": "2025-03-26T19:50:30.809Z"
                      },
                      {
                        "id": 2,
                        "definitionId": 1,
                        "cityId": null,
                        "countryId": 1,
                        "value": "Access to public specialists (with referral)",
                        "score": null,
                        "comment": null,
                        "note": null,
                        "type": "bullet",
                        "visible": true,
                        "created_at": "2025-03-26T19:50:30.809Z",
                        "updated_at": "2025-03-26T19:50:30.809Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Return all def values.",
        "tags": [
          "def_value"
        ]
      },
      "put": {
        "operationId": "DefValueController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to update def value",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDefValueDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "id": 1,
                    "definitionId": 1,
                    "cityId": null,
                    "countryId": 1,
                    "value": "Assigned general practitioner (GP / medico di base)",
                    "score": null,
                    "comment": null,
                    "note": null,
                    "type": "bullet",
                    "visible": true,
                    "created_at": "2025-03-26T19:50:30.809Z",
                    "updated_at": "2025-03-26T19:50:30.809Z"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "id": 1,
                      "definitionId": 1,
                      "cityId": null,
                      "countryId": 1,
                      "value": "Assigned general practitioner (GP / medico di base)",
                      "score": null,
                      "comment": null,
                      "note": null,
                      "type": "bullet",
                      "visible": true,
                      "created_at": "2025-03-26T19:50:30.809Z",
                      "updated_at": "2025-03-26T19:50:30.809Z"
                    },
                    {
                      "id": 2,
                      "definitionId": 1,
                      "cityId": null,
                      "countryId": 1,
                      "value": "Access to public specialists (with referral)",
                      "score": null,
                      "comment": null,
                      "note": null,
                      "type": "bullet",
                      "visible": true,
                      "created_at": "2025-03-26T19:50:30.809Z",
                      "updated_at": "2025-03-26T19:50:30.809Z"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated def values.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DefValueDto"
                  }
                },
                "examples": {
                  "single": {
                    "summary": "Single updated def value",
                    "value": {
                      "id": 1,
                      "definitionId": 1,
                      "cityId": null,
                      "countryId": 1,
                      "value": "Assigned general practitioner (GP / medico di base)",
                      "score": null,
                      "comment": null,
                      "note": null,
                      "type": "bullet",
                      "visible": true,
                      "created_at": "2025-03-26T19:50:30.809Z",
                      "updated_at": "2025-03-26T19:50:30.809Z"
                    }
                  },
                  "multiple": {
                    "summary": "Multiple updated def values",
                    "value": [
                      {
                        "id": 1,
                        "definitionId": 1,
                        "cityId": null,
                        "countryId": 1,
                        "value": "Assigned general practitioner (GP / medico di base)",
                        "score": null,
                        "comment": null,
                        "note": null,
                        "type": "bullet",
                        "visible": true,
                        "created_at": "2025-03-26T19:50:30.809Z",
                        "updated_at": "2025-03-26T19:50:30.809Z"
                      },
                      {
                        "id": 2,
                        "definitionId": 1,
                        "cityId": null,
                        "countryId": 1,
                        "value": "Access to public specialists (with referral)",
                        "score": null,
                        "comment": null,
                        "note": null,
                        "type": "bullet",
                        "visible": true,
                        "created_at": "2025-03-26T19:50:30.809Z",
                        "updated_at": "2025-03-26T19:50:30.809Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Update def values",
        "tags": [
          "def_value"
        ]
      }
    },
    "/def_value/by-field": {
      "get": {
        "operationId": "DefValueController_getByField",
        "parameters": [
          {
            "name": "field",
            "required": true,
            "in": "query",
            "description": "The field of the aspect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryId",
            "required": true,
            "in": "query",
            "description": "The country id of the def value",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Return def values by field.",
        "tags": [
          "def_value"
        ]
      }
    },
    "/def_value/{id}": {
      "get": {
        "operationId": "DefValueController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved def value by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefValueDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "Def value DTO",
                    "value": {
                      "id": 1,
                      "definitionId": 1,
                      "cityId": null,
                      "countryId": 1,
                      "value": "Assigned general practitioner (GP / medico di base)",
                      "score": null,
                      "comment": null,
                      "note": null,
                      "type": "bullet",
                      "visible": true,
                      "created_at": "2025-03-26T19:50:30.809Z",
                      "updated_at": "2025-03-26T19:50:30.809Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return def value by id.",
        "tags": [
          "def_value"
        ]
      },
      "delete": {
        "operationId": "DefValueController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted def value by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefValueDto"
                },
                "examples": {
                  "application/json": {
                    "summary": "def value DTO",
                    "value": {
                      "id": 1,
                      "definitionId": 1,
                      "cityId": null,
                      "countryId": 1,
                      "value": "Assigned general practitioner (GP / medico di base)",
                      "score": null,
                      "comment": null,
                      "note": null,
                      "type": "bullet",
                      "visible": true,
                      "created_at": "2025-03-26T19:50:30.809Z",
                      "updated_at": "2025-03-26T19:50:30.809Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete def value by id.",
        "tags": [
          "def_value"
        ]
      }
    },
    "/blogs": {
      "post": {
        "operationId": "BlogsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to create new blog",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBlogDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "cityId": null,
                    "countryId": 1,
                    "slug": "test-test-test",
                    "field": "tax",
                    "keywords": "test, tax",
                    "title": "Testing 123",
                    "description": "test for the test",
                    "visible": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a blog",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogDto"
                },
                "examples": {
                  "single": {
                    "summary": "Blogs DTO",
                    "value": {
                      "id": 1,
                      "cityId": null,
                      "countryId": 1,
                      "slug": "test-test-test",
                      "field": "tax",
                      "keywords": "test, tax",
                      "title": "Testing 123",
                      "description": "test for the test",
                      "visible": true,
                      "created_at": "2025-07-18T13:53:28.705Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a new blog post",
        "tags": [
          "blogs"
        ]
      },
      "get": {
        "operationId": "BlogsController_getAll",
        "parameters": [
          {
            "name": "field",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Filtered list of blogs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogDto"
                },
                "examples": {
                  "single": {
                    "summary": "Blog DTO",
                    "value": [
                      {
                        "id": 1,
                        "cityId": null,
                        "countryId": 1,
                        "slug": "test-test-test",
                        "field": "tax",
                        "keywords": "test, tax",
                        "title": "Testing 123",
                        "description": "test for the test",
                        "visible": true,
                        "created_at": "2025-07-18T13:53:28.705Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Get all blogs (filtered by field and/or countryId)",
        "tags": [
          "blogs"
        ]
      },
      "put": {
        "operationId": "BlogsController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data to update blog",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBlogDto"
              },
              "examples": {
                "single": {
                  "value": {
                    "id": 1,
                    "cityId": null,
                    "countryId": 1,
                    "slug": "test-test-test",
                    "field": "tax",
                    "keywords": "test, tax",
                    "title": "Testing 123",
                    "description": "test for the test",
                    "visible": true,
                    "created_at": "2025-07-18T13:53:28.705Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully updated the blog",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogDto"
                },
                "examples": {
                  "single": {
                    "summary": "Blogs DTO",
                    "value": {
                      "id": 1,
                      "cityId": null,
                      "countryId": 1,
                      "slug": "test-test-test",
                      "field": "tax",
                      "keywords": "test, tax",
                      "title": "Testing 123",
                      "description": "test for the test",
                      "visible": true,
                      "created_at": "2025-07-18T13:53:28.705Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update an existing blog post",
        "tags": [
          "blogs"
        ]
      }
    },
    "/blogs/slug/{slug}": {
      "get": {
        "operationId": "BlogsController_getBySlug",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Single blog with sections",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogDto"
                },
                "examples": {
                  "single": {
                    "summary": "Blog DTO",
                    "value": {
                      "id": 1,
                      "cityId": null,
                      "countryId": 1,
                      "slug": "test-test-test",
                      "field": "tax",
                      "keywords": "test, tax",
                      "title": "Testing 123",
                      "description": "test for the test",
                      "visible": true,
                      "created_at": "2025-07-18T13:53:28.705Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get single blog by slug (with sections)",
        "tags": [
          "blogs"
        ]
      }
    },
    "/blogs/{id}": {
      "delete": {
        "operationId": "BlogsController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully deleted the blog",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogDto"
                },
                "examples": {
                  "single": {
                    "summary": "Blogs DTO",
                    "value": {
                      "id": 1,
                      "cityId": null,
                      "countryId": 1,
                      "slug": "test-test-test",
                      "field": "tax",
                      "keywords": "test, tax",
                      "title": "Testing 123",
                      "description": "test for the test",
                      "visible": true,
                      "created_at": "2025-07-18T13:53:28.705Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete blog by ID",
        "tags": [
          "blogs"
        ]
      }
    },
    "/blogs/section": {
      "post": {
        "operationId": "BlogsController_createSection",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Blog sections body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBlogSectionDto"
              },
              "examples": {
                "multiple": {
                  "value": [
                    {
                      "blogId": 1,
                      "order": 1,
                      "type": "text",
                      "content": "Italy Digital Nomad Visa 2025: Full Tax Breakdown for Freelancers",
                      "note": null
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created blog sections",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBlogSectionDto"
                },
                "examples": {
                  "single": {
                    "summary": "BlogSection DTO",
                    "value": {
                      "count": 1
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create one or more blog sections",
        "tags": [
          "blogs"
        ]
      }
    },
    "/blogs/section/{id}": {
      "get": {
        "operationId": "BlogsController_getSectionById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Single blog section",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBlogSectionDto"
                },
                "example": {
                  "value": {
                    "id": 1,
                    "blogId": 1,
                    "order": 1,
                    "type": "text",
                    "content": "Italy Digital Nomad Visa 2025: Full Tax Breakdown for Freelancers",
                    "note": null,
                    "created_at": "2025-07-18T13:54:03.089Z"
                  }
                }
              }
            }
          }
        },
        "summary": "Get a single blog section by ID",
        "tags": [
          "blogs"
        ]
      },
      "delete": {
        "operationId": "BlogsController_deleteSection",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Section deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBlogSectionDto"
                },
                "example": {
                  "value": {
                    "id": 1,
                    "blogId": 1,
                    "order": 1,
                    "type": "text",
                    "content": "Italy Digital Nomad Visa 2025: Full Tax Breakdown for Freelancers",
                    "note": null,
                    "created_at": "2025-07-18T13:54:03.089Z"
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a blog section by ID",
        "tags": [
          "blogs"
        ]
      }
    },
    "/layers": {
      "post": {
        "operationId": "LayersController_createLayer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Layer creation payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateLayerDto"
                }
              },
              "examples": {
                "single": {
                  "value": {
                    "cityId": 2,
                    "layerTypeId": 1,
                    "value": 10.5,
                    "value_string": "Optional string"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "cityId": 2,
                      "layerTypeId": 1,
                      "value": 10.5,
                      "value_string": "Optional string"
                    },
                    {
                      "cityId": 3,
                      "layerTypeId": 2,
                      "value": 7.2,
                      "value_string": null
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created layer(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayerDto"
                },
                "examples": {
                  "single": {
                    "summary": "Single Layer Response",
                    "value": {
                      "id": 1,
                      "cityId": 2,
                      "layerTypeId": 1,
                      "value": 10.5,
                      "value_string": null,
                      "created_at": "2025-07-25T12:34:56.000Z"
                    }
                  },
                  "multiple": {
                    "summary": "Create Many Response",
                    "value": {
                      "count": 2
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create one or many layer entries",
        "tags": [
          "layers"
        ]
      },
      "get": {
        "operationId": "LayersController_getAllLayers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of layers with optional filters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LayerDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all layers with optional filters",
        "tags": [
          "layers"
        ]
      },
      "put": {
        "operationId": "LayersController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Layer update payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LayerDto"
                }
              },
              "examples": {
                "multiple": {
                  "value": [
                    {
                      "id": 1,
                      "cityId": 1,
                      "layerTypeId": 2,
                      "value": 123.45,
                      "value_string": "Example string",
                      "created_at": "2025-07-25T15:30:00.000Z"
                    },
                    {
                      "id": 2,
                      "cityId": 2,
                      "layerTypeId": 3,
                      "value": 678.9,
                      "value_string": "Another example",
                      "created_at": "2025-07-25T15:30:00.000Z"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated layer(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LayerDto"
                  }
                },
                "examples": {
                  "multiple": {
                    "summary": "Layer DTO",
                    "value": [
                      {
                        "id": 1,
                        "cityId": 1,
                        "layerTypeId": 2,
                        "value": 123.45,
                        "value_string": "Example string",
                        "created_at": "2025-07-25T15:30:00.000Z",
                        "city": {
                          "id": 1,
                          "name": "Sample City",
                          "country": "Sample Country",
                          "lat": 12.34,
                          "lng": 56.78,
                          "seaside": true,
                          "size": 100000
                        },
                        "layer_type": {
                          "id": 2,
                          "name": "Sample Layer Type"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Update one or many layer entries",
        "tags": [
          "layers"
        ]
      },
      "delete": {
        "operationId": "LayersController_delete",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Deleted layer entry or entries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LayerDto"
                  }
                },
                "examples": {
                  "single": {
                    "summary": "Deleted layer by id",
                    "value": {
                      "id": 1,
                      "cityId": 1,
                      "layerTypeId": 2,
                      "value": 123.45,
                      "value_string": "Example string",
                      "created_at": "2025-07-25T15:30:00.000Z",
                      "city": {
                        "id": 1,
                        "name": "Sample City",
                        "country": "Sample Country",
                        "lat": 12.34,
                        "lng": 56.78,
                        "seaside": true,
                        "size": 100000
                      },
                      "layer_type": {
                        "id": 2,
                        "name": "Sample Layer Type"
                      }
                    }
                  },
                  "multiple": {
                    "summary": "Deleted layers by cityId and layerTypeId",
                    "value": [
                      {
                        "id": 1,
                        "cityId": 1,
                        "layerTypeId": 2,
                        "value": 123,
                        "value_string": "example",
                        "created_at": "2025-03-26T19:50:30.809Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Delete layer(s) by id or by cityId and layerTypeId",
        "tags": [
          "layers"
        ]
      }
    },
    "/layers/types": {
      "post": {
        "operationId": "LayersController_createLayerType",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Layer type creation payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateLayerTypeDto"
                }
              },
              "examples": {
                "single": {
                  "value": {
                    "name": "Walkability"
                  }
                },
                "multiple": {
                  "value": [
                    {
                      "name": "Walkability"
                    },
                    {
                      "name": "Green Space"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created layer type(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayerTypeDto"
                },
                "examples": {
                  "single": {
                    "summary": "Single Layer Response",
                    "value": {
                      "id": 1,
                      "name": "Population Density"
                    }
                  },
                  "multiple": {
                    "summary": "Single Layer Response",
                    "value": {
                      "count": 2
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create one or many layer types",
        "tags": [
          "layers"
        ]
      }
    },
    "/layers/city/{cityId}": {
      "get": {
        "operationId": "LayersController_getByCityId",
        "parameters": [
          {
            "name": "cityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Layer object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayerDto"
                },
                "examples": {
                  "single": {
                    "summary": "Layer DTO",
                    "value": {
                      "id": 1,
                      "cityId": 1,
                      "layerTypeId": 2,
                      "value": 123.45,
                      "value_string": "Example string",
                      "created_at": "2025-07-25T15:30:00.000Z",
                      "city": {
                        "id": 1,
                        "name": "Sample City",
                        "country": "Sample Country",
                        "lat": 12.34,
                        "lng": 56.78,
                        "seaside": true,
                        "size": 100000
                      },
                      "layer_type": {
                        "id": 2,
                        "name": "Sample Layer Type"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get all layers for a specific city",
        "tags": [
          "layers"
        ]
      }
    },
    "/layers/{id}": {
      "get": {
        "operationId": "LayersController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Layer object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayerDto"
                },
                "examples": {
                  "single": {
                    "summary": "Layer DTO",
                    "value": {
                      "id": 1,
                      "cityId": 1,
                      "layerTypeId": 2,
                      "value": 123.45,
                      "value_string": "Example string",
                      "created_at": "2025-07-25T15:30:00.000Z",
                      "city": {
                        "id": 1,
                        "name": "Sample City",
                        "country": "Sample Country",
                        "lat": 12.34,
                        "lng": 56.78,
                        "seaside": true,
                        "size": 100000
                      },
                      "layer_type": {
                        "id": 2,
                        "name": "Sample Layer Type"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get all layers for a specific city",
        "tags": [
          "layers"
        ]
      }
    },
    "/layers/types/all": {
      "get": {
        "operationId": "LayersController_getAllTypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of all layer types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LayerTypeDto"
                  }
                },
                "examples": {
                  "multiple": {
                    "summary": "Layer types array",
                    "value": [
                      {
                        "id": 1,
                        "name": "Type A"
                      },
                      {
                        "id": 2,
                        "name": "Type B"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Get all layer types",
        "tags": [
          "layers"
        ]
      }
    },
    "/layers/types/{id}": {
      "delete": {
        "operationId": "LayersController_deleteType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted layer type entry",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayerTypeDto"
                },
                "examples": {
                  "single": {
                    "summary": "Deleted layer type",
                    "value": {
                      "id": 1,
                      "name": "Type A"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a layer type by ID",
        "tags": [
          "layers"
        ]
      }
    }
  },
  "info": {
    "title": "My API",
    "description": "The API documentation",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {}
      },
      "UserDto": {
        "type": "object",
        "properties": {}
      },
      "CreateCityDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the city"
          },
          "country": {
            "type": "string",
            "description": "The country where the city is located"
          },
          "search": {
            "type": "string",
            "description": "Name used for numbeo search"
          },
          "lat": {
            "type": "number",
            "description": "Latitude of the city"
          },
          "lng": {
            "type": "number",
            "description": "Longitude of the city"
          },
          "seaside": {
            "type": "boolean",
            "description": "Is city on the seaside"
          },
          "size": {
            "type": "number",
            "description": "The number of inhabitants of the city"
          },
          "countriesId": {
            "type": "number",
            "description": "The unique identifier of the country"
          }
        },
        "required": [
          "name",
          "country",
          "search",
          "lat",
          "lng",
          "seaside",
          "countriesId"
        ]
      },
      "CityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of the city"
          },
          "name": {
            "type": "string",
            "description": "The name of the city"
          },
          "country": {
            "type": "string",
            "description": "The country where the city is located"
          },
          "search": {
            "type": "string",
            "description": "Name used for numbeo search"
          },
          "lat": {
            "type": "number",
            "description": "Latitude of the city"
          },
          "lng": {
            "type": "number",
            "description": "Longitude of the city"
          },
          "seaside": {
            "type": "boolean",
            "description": "Is city on the seaside"
          },
          "size": {
            "type": "number",
            "description": "The number of inhabitants of the city"
          },
          "countriesId": {
            "type": "number",
            "description": "The unique identifier of the country"
          }
        },
        "required": [
          "id",
          "name",
          "country",
          "search",
          "lat",
          "lng",
          "seaside",
          "countriesId"
        ]
      },
      "CreateYearDto": {
        "type": "object",
        "properties": {
          "year": {
            "type": "number",
            "description": "The year number"
          }
        },
        "required": [
          "year"
        ]
      },
      "YearDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of the year"
          },
          "year": {
            "type": "number",
            "description": "The year number"
          }
        },
        "required": [
          "id",
          "year"
        ]
      },
      "ProductDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of the product"
          },
          "name": {
            "type": "string",
            "description": "Product name"
          },
          "categoryId": {
            "type": "number",
            "description": "Category id of the product"
          },
          "unit": {
            "type": "string",
            "description": "Product unit"
          },
          "description": {
            "type": "string",
            "description": "Product description, optional"
          },
          "type": {
            "type": "string",
            "description": "Product Type",
            "enum": [
              "ALL",
              "CURRENT",
              "HISTORICAL"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "categoryId",
          "unit",
          "type"
        ]
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the category"
          }
        },
        "required": [
          "name"
        ]
      },
      "CategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of the category"
          },
          "name": {
            "type": "string",
            "description": "The name of the category"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "CreatePriceDto": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "description": "The price value"
          },
          "top": {
            "type": "number",
            "description": "Top of the price range"
          },
          "bottom": {
            "type": "number",
            "description": "Bottom of the price range"
          },
          "currency": {
            "type": "string",
            "description": "The currency of the price"
          },
          "cityId": {
            "type": "number",
            "description": "The id of the city (cities table foreign key)"
          },
          "productId": {
            "type": "number",
            "description": "The id of the product (products table foreign key)"
          },
          "yearId": {
            "type": "number",
            "description": "The id of the year (years table foreign key)"
          },
          "priceType": {
            "type": "string",
            "description": "Price Type",
            "enum": [
              "CURRENT",
              "HISTORICAL"
            ]
          }
        },
        "required": [
          "price",
          "currency",
          "cityId",
          "productId",
          "yearId",
          "priceType"
        ]
      },
      "PriceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of the price"
          },
          "price": {
            "type": "number",
            "description": "The price value"
          },
          "top": {
            "type": "number",
            "description": "Top of the price range"
          },
          "bottom": {
            "type": "number",
            "description": "Bottom of the price range"
          },
          "currency": {
            "type": "string",
            "description": "The currency of the price"
          },
          "cityId": {
            "type": "number",
            "description": "The id of the city (cities table foreign key)"
          },
          "productId": {
            "type": "number",
            "description": "The id of the product (products table foreign key)"
          },
          "yearId": {
            "type": "number",
            "description": "The id of the year (years table foreign key)"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date when the record was created",
            "example": "2025-03-26T12:00:00Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date when the record was last updated",
            "example": "2025-03-26T12:00:00Z"
          },
          "priceType": {
            "type": "string",
            "description": "Price Type",
            "enum": [
              "CURRENT",
              "HISTORICAL"
            ]
          }
        },
        "required": [
          "id",
          "price",
          "currency",
          "cityId",
          "productId",
          "yearId",
          "priceType"
        ]
      },
      "Object": {
        "type": "object",
        "properties": {}
      },
      "PricePaginationDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of prices matching the query filters",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceDto"
            }
          },
          "total": {
            "type": "number",
            "description": "Total number of prices matching the query filters",
            "example": 100
          },
          "limit": {
            "type": "number",
            "description": "Limit of items per page",
            "example": 10
          },
          "offset": {
            "type": "number",
            "description": "Offset of items to skip for pagination",
            "example": 1
          }
        },
        "required": [
          "data",
          "total",
          "limit",
          "offset"
        ]
      },
      "CreateSocialLifestyleDto": {
        "type": "object",
        "properties": {
          "cityId": {
            "type": "number",
            "description": "City ID"
          },
          "yearId": {
            "type": "number",
            "description": "Year ID"
          },
          "avg_price": {
            "type": "number",
            "description": "Average price"
          },
          "currency": {
            "type": "string",
            "description": "Currency code (e.g. EUR, USD)"
          },
          "type": {
            "type": "string",
            "description": "Type of report"
          }
        },
        "required": [
          "cityId",
          "yearId"
        ]
      },
      "SocialLifestyleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of the Social lifestyle report"
          },
          "cityId": {
            "type": "number",
            "description": "City ID"
          },
          "yearId": {
            "type": "number",
            "description": "Year ID"
          },
          "avg_price": {
            "type": "number",
            "description": "Average price"
          },
          "currency": {
            "type": "string",
            "description": "Currency code (e.g. EUR, USD)"
          },
          "type": {
            "type": "string",
            "description": "Type of report",
            "enum": [
              "SOLO",
              "PAIR",
              "FAMILY"
            ]
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "description": "Date when the record was created",
            "example": "2025-03-26T12:00:00Z"
          }
        },
        "required": [
          "id",
          "cityId",
          "yearId"
        ]
      },
      "CreateCrimeRankDto": {
        "type": "object",
        "properties": {
          "cityId": {
            "type": "number",
            "description": "The city ID this crime rank belongs to"
          },
          "yearId": {
            "type": "number",
            "description": "The year ID this crime rank is recorded for"
          },
          "crimeAspectId": {
            "type": "number",
            "description": "The crime aspect ID"
          },
          "rank": {
            "type": "number",
            "description": "The crime ranking value"
          }
        },
        "required": [
          "cityId",
          "yearId",
          "crimeAspectId",
          "rank"
        ]
      },
      "CrimeRankDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of crime rank."
          },
          "cityId": {
            "type": "number",
            "description": "The city ID"
          },
          "yearId": {
            "type": "number",
            "description": "The year ID"
          },
          "crimeAspectId": {
            "type": "number",
            "description": "The crime aspect ID"
          },
          "rank": {
            "type": "number",
            "description": "The crime rank value"
          },
          "created_at": {
            "type": "string",
            "description": "Date and time when this rank was created",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "cityId",
          "yearId",
          "crimeAspectId",
          "rank",
          "created_at"
        ]
      },
      "CrimeSafetySummaryDto": {
        "type": "object",
        "properties": {
          "overallCrimeConcernIndex": {
            "type": "number",
            "example": 58.79,
            "description": "Average score of all crime concerns"
          },
          "personalSafetyScore": {
            "type": "number",
            "example": 43.71,
            "description": "Weighted score for personal safety (day/night)"
          },
          "crimeEscalationIndicator": {
            "type": "number",
            "example": 73.2,
            "description": "Score reflecting perception of rising crime"
          }
        },
        "required": [
          "overallCrimeConcernIndex",
          "personalSafetyScore",
          "crimeEscalationIndicator"
        ]
      },
      "CreateCrimeAspectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the crime aspect (e.g. 'Assault', 'Theft')"
          }
        },
        "required": [
          "name"
        ]
      },
      "CrimeAspectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of crime aspect"
          },
          "name": {
            "type": "string",
            "description": "The name of the crime aspect"
          },
          "created_at": {
            "type": "string",
            "description": "The timestamp when the aspect was created",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "created_at"
        ]
      },
      "CreateWeathersDto": {
        "type": "object",
        "properties": {
          "cityId": {
            "type": "number",
            "description": "ID of the city this weather data belongs to"
          },
          "sunshine": {
            "type": "number",
            "description": "Number of sunshine days per year"
          },
          "rain": {
            "type": "number",
            "description": "Number of rainy days per year"
          },
          "cold": {
            "type": "number",
            "description": "Number of cold days per year (<10°C)"
          },
          "heat": {
            "type": "number",
            "description": "Number of hot days per year (>25°C)"
          },
          "cold_extremes": {
            "type": "number",
            "description": "Number of extreme cold days per year (<0°C)"
          },
          "heat_extremes": {
            "type": "number",
            "description": "Number of extreme heat days per year (>35°C)"
          },
          "humidity": {
            "type": "number",
            "description": "Average annual humidity (%)"
          },
          "severe": {
            "type": "string",
            "description": "Description of severe weather risk"
          },
          "lowest": {
            "type": "number",
            "description": "Lowest recorded temperature (°C)"
          },
          "highest": {
            "type": "number",
            "description": "Highest recorded temperature (°C)"
          }
        },
        "required": [
          "cityId",
          "sunshine",
          "rain",
          "cold",
          "heat",
          "cold_extremes",
          "heat_extremes",
          "humidity",
          "severe",
          "lowest",
          "highest"
        ]
      },
      "WeathersDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique weather record ID"
          },
          "cityId": {
            "type": "number",
            "description": "ID of the city this weather data belongs to"
          },
          "sunshine": {
            "type": "number",
            "description": "Number of sunshine days per year"
          },
          "rain": {
            "type": "number",
            "description": "Number of rainy days per year"
          },
          "cold": {
            "type": "number",
            "description": "Number of cold days per year (<10°C)"
          },
          "heat": {
            "type": "number",
            "description": "Number of hot days per year (>25°C)"
          },
          "cold_extremes": {
            "type": "number",
            "description": "Number of extreme cold days per year (<0°C)"
          },
          "heat_extremes": {
            "type": "number",
            "description": "Number of extreme heat days per year (>35°C)"
          },
          "humidity": {
            "type": "number",
            "description": "Average annual humidity (%)"
          },
          "severe": {
            "type": "string",
            "description": "Description of severe weather risk"
          },
          "lowest": {
            "type": "number",
            "description": "Lowest recorded temperature (°C)"
          },
          "highest": {
            "type": "number",
            "description": "Highest recorded temperature (°C)"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "description": "Date when this record was created"
          }
        },
        "required": [
          "id",
          "cityId",
          "sunshine",
          "rain",
          "cold",
          "heat",
          "cold_extremes",
          "heat_extremes",
          "humidity",
          "severe",
          "lowest",
          "highest",
          "created_at"
        ]
      },
      "CityContextDto": {
        "type": "object",
        "properties": {
          "cityId": {
            "type": "number",
            "description": "The city ID this context profile belongs to"
          },
          "climate": {
            "type": "string",
            "description": "Climate description (e.g. Tropical, Temperate, etc.)"
          },
          "tourismLevel": {
            "type": "string",
            "description": "Tourism level (e.g. High, Moderate, Low)"
          },
          "expatCommunity": {
            "type": "string",
            "description": "Expat community size or presence"
          },
          "natureAccess": {
            "type": "string",
            "description": "Access to nature (e.g. parks, beaches, forests)"
          },
          "localLifestyle": {
            "type": "string",
            "description": "Description of the local lifestyle"
          },
          "seasonality": {
            "type": "string",
            "description": "Seasonality pattern (e.g. rainy season, dry season)"
          },
          "cultureHighlights": {
            "type": "string",
            "description": "Cultural highlights and points of interest"
          },
          "sportsAndActivities": {
            "type": "string",
            "description": "Available sports and outdoor activities"
          },
          "detailedStory": {
            "type": "string",
            "description": "Detailed lifestyle story or narrative for the city"
          },
          "created_at": {
            "type": "string",
            "description": "Date and time when this rank was created",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "Date and time when this rank was updated",
            "format": "date-time"
          }
        },
        "required": [
          "cityId",
          "climate",
          "tourismLevel",
          "expatCommunity",
          "natureAccess",
          "localLifestyle",
          "seasonality",
          "cultureHighlights",
          "sportsAndActivities",
          "detailedStory",
          "created_at",
          "updated_at"
        ]
      },
      "CityFeelDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "City Feel ID"
          },
          "cityId": {
            "type": "number",
            "description": "City Feel city ID"
          },
          "rank": {
            "type": "number",
            "description": "City Feel rank"
          },
          "tags": {
            "type": "string",
            "description": "City Feel tags",
            "nullable": true
          },
          "budget": {
            "type": "number",
            "description": "City Feel budget",
            "nullable": true
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "description": "City Feel date of creation"
          }
        },
        "required": [
          "id",
          "cityId",
          "rank"
        ]
      },
      "CreateCountryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the country"
          }
        },
        "required": [
          "name"
        ]
      },
      "CountryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of the country"
          },
          "name": {
            "type": "string",
            "description": "The name of the country"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "CreateAspectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the aspect"
          },
          "field": {
            "type": "string",
            "description": "The field of the aspect"
          },
          "scope": {
            "type": "string",
            "description": "The scope of the aspect"
          }
        },
        "required": [
          "name",
          "field",
          "scope"
        ]
      },
      "AspectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of the aspect"
          },
          "name": {
            "type": "string",
            "description": "The name of the aspect"
          },
          "field": {
            "type": "string",
            "description": "The field of the aspect"
          },
          "scope": {
            "type": "string",
            "description": "The scope of the aspect"
          }
        },
        "required": [
          "id",
          "name",
          "field",
          "scope"
        ]
      },
      "CreateDefinitionDto": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "The label of the definition"
          },
          "type": {
            "type": "string",
            "description": "The type of the definition"
          },
          "aspectId": {
            "type": "number",
            "description": "The id of the aspect of the definition"
          }
        },
        "required": [
          "label",
          "type",
          "aspectId"
        ]
      },
      "DefinitionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of the definition"
          },
          "label": {
            "type": "string",
            "description": "The label of the definition"
          },
          "type": {
            "type": "string",
            "description": "The type of the definition"
          },
          "aspectId": {
            "type": "number",
            "description": "The id of the aspect of the definition"
          }
        },
        "required": [
          "id",
          "label",
          "type",
          "aspectId"
        ]
      },
      "CreateDefValueDto": {
        "type": "object",
        "properties": {
          "definitionId": {
            "type": "number",
            "description": "The definition id of the def value"
          },
          "cityId": {
            "type": "number",
            "description": "The city id of the def value"
          },
          "countryId": {
            "type": "number",
            "description": "The country id of the def value"
          },
          "type": {
            "type": "string",
            "description": "The type of the def value"
          },
          "value": {
            "type": "string",
            "description": "The value of the def value"
          },
          "score": {
            "type": "number",
            "description": "The score of the def value"
          },
          "comment": {
            "type": "string",
            "description": "The comment of the def value"
          },
          "note": {
            "type": "string",
            "description": "The note of the def value"
          },
          "visible": {
            "type": "boolean",
            "description": "The note of the def value"
          }
        },
        "required": [
          "definitionId",
          "cityId",
          "countryId",
          "type",
          "value",
          "score",
          "comment",
          "note",
          "visible"
        ]
      },
      "DefValueDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of the definition"
          },
          "definitionId": {
            "type": "number",
            "description": "The definition id of the def value"
          },
          "cityId": {
            "type": "number",
            "description": "The city id of the def value"
          },
          "countryId": {
            "type": "number",
            "description": "The country id of the def value"
          },
          "type": {
            "type": "string",
            "description": "The type of the def value"
          },
          "value": {
            "type": "string",
            "description": "The value of the def value"
          },
          "score": {
            "type": "number",
            "description": "The score of the def value"
          },
          "comment": {
            "type": "string",
            "description": "The comment of the def value"
          },
          "note": {
            "type": "string",
            "description": "The note of the def value"
          },
          "visible": {
            "type": "boolean",
            "description": "The note of the def value"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "description": "Date when the record was created",
            "example": "2025-03-26T12:00:00Z"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "description": "Date when the record was updated",
            "example": "2025-03-26T12:00:00Z"
          }
        },
        "required": [
          "id",
          "definitionId",
          "cityId",
          "countryId",
          "type",
          "value",
          "score",
          "comment",
          "note",
          "visible",
          "created_at"
        ]
      },
      "CreateBlogDto": {
        "type": "object",
        "properties": {
          "cityId": {
            "type": "number",
            "description": "City ID"
          },
          "countryId": {
            "type": "number",
            "description": "Country ID"
          },
          "slug": {
            "type": "string",
            "description": "Unique slug for the blog"
          },
          "field": {
            "type": "string",
            "description": "Field or topic of the blog"
          },
          "keywords": {
            "type": "string",
            "description": "Keywords related to the blog"
          },
          "title": {
            "type": "string",
            "description": "Title of the blog"
          },
          "description": {
            "type": "string",
            "description": "Short description of the blog"
          },
          "visible": {
            "type": "boolean",
            "description": "Visibility status of the blog",
            "default": true
          }
        },
        "required": [
          "slug",
          "field",
          "keywords",
          "title",
          "description",
          "visible"
        ]
      },
      "BlogDto": {
        "type": "object",
        "properties": {
          "cityId": {
            "type": "number",
            "description": "City ID"
          },
          "countryId": {
            "type": "number",
            "description": "Country ID"
          },
          "slug": {
            "type": "string",
            "description": "Unique slug for the blog"
          },
          "field": {
            "type": "string",
            "description": "Field or topic of the blog"
          },
          "keywords": {
            "type": "string",
            "description": "Keywords related to the blog"
          },
          "title": {
            "type": "string",
            "description": "Title of the blog"
          },
          "description": {
            "type": "string",
            "description": "Short description of the blog"
          },
          "visible": {
            "type": "boolean",
            "description": "Visibility status of the blog",
            "default": true
          },
          "id": {
            "type": "number",
            "description": "Blog ID"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "description": "Date of blog creation"
          }
        },
        "required": [
          "slug",
          "field",
          "keywords",
          "title",
          "description",
          "visible",
          "id",
          "created_at"
        ]
      },
      "CreateBlogSectionDto": {
        "type": "object",
        "properties": {
          "blogId": {
            "type": "number",
            "description": "ID of the blog this section belongs to"
          },
          "order": {
            "type": "number",
            "description": "Order of this section in the blog"
          },
          "type": {
            "type": "string",
            "description": "Type of the section (text, image, quote, etc.)"
          },
          "content": {
            "type": "string",
            "description": "Content of the section"
          },
          "note": {
            "type": "string",
            "description": "Optional note for internal use or annotation"
          }
        },
        "required": [
          "blogId",
          "order",
          "type",
          "content"
        ]
      },
      "CreateLayerDto": {
        "type": "object",
        "properties": {
          "cityId": {
            "type": "number",
            "description": "The ID of the city this layer belongs to"
          },
          "layerTypeId": {
            "type": "number",
            "description": "The ID of the layer type"
          },
          "value": {
            "type": "number",
            "description": "The numerical value of the layer (if applicable)"
          },
          "value_string": {
            "type": "string",
            "description": "The string representation of the value (if applicable)"
          }
        },
        "required": [
          "cityId",
          "layerTypeId"
        ]
      },
      "LayerDto": {
        "type": "object",
        "properties": {
          "cityId": {
            "type": "number",
            "description": "The ID of the city this layer belongs to"
          },
          "layerTypeId": {
            "type": "number",
            "description": "The ID of the layer type"
          },
          "value": {
            "type": "number",
            "description": "The numerical value of the layer (if applicable)"
          },
          "value_string": {
            "type": "string",
            "description": "The string representation of the value (if applicable)"
          },
          "id": {
            "type": "number",
            "description": "The unique identifier of the layer"
          },
          "created_at": {
            "type": "string",
            "description": "The creation date of the layer",
            "format": "date-time"
          }
        },
        "required": [
          "cityId",
          "layerTypeId",
          "id",
          "created_at"
        ]
      },
      "CreateLayerTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the layer type"
          },
          "type": {
            "type": "string",
            "description": "The type of the layer type"
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "LayerTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the layer type"
          },
          "type": {
            "type": "string",
            "description": "The type of the layer type"
          },
          "id": {
            "type": "number",
            "description": "The unique identifier of the layer type"
          }
        },
        "required": [
          "name",
          "type",
          "id"
        ]
      }
    }
  }
}