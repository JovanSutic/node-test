generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id   Int     @id @default(autoincrement())
  name String?
}

model cities {
  id   Int     @id @default(autoincrement())
  name String
  country String
  search String?
  lat Float?
  lng Float?
  seaside Boolean?

  prices  prices[]
  socialLifestyleReports city_social_lifestyle_report[]
}

model years {
  id    Int    @id @default(autoincrement())
  year  Int    @unique

  prices prices[]
  socialLifestyleReports city_social_lifestyle_report[]
}

model categories {
  id          Int       @id @default(autoincrement())
  name        String    @unique

  products    products[]
}

model products {
  id          Int     @id @default(autoincrement())
  name        String
  categoryId    Int  @map("category_id")
  unit        String
  description String?
  type        ProductType?

  category    categories @relation(fields: [categoryId], references: [id])
  prices prices[]
}

model prices {
  id         Int     @id @default(autoincrement()) 
  price      Float 
  top        Float?
  bottom     Float?  
  currency   String  
  cityId     Int    @map("city_id")
  productId  Int    @map("product_id")
  yearId     Int    @map("year_id")
  createdAt  DateTime @default(now())  @map("created_at")
  updatedAt  DateTime @updatedAt  @map("updated_at")
  priceType  PriceType  @map("price_type")

  city       cities    @relation(fields: [cityId], references: [id])
  product    products @relation(fields: [productId], references: [id])
  year       years    @relation(fields: [yearId], references: [id])
}

enum PriceType {
  CURRENT    // The current price (most recent one)
  HISTORICAL // A historical price at a specific time
}

enum ProductType {
  ALL
  HISTORICAL
  CURRENT
}

model city_social_lifestyle_report {
  id            Int      @id @default(autoincrement())
  cityId        Int    @map("city_id")
  yearId        Int    @map("year_id")
  avg_price     Float?
  currency      String?
  type          SocialType?
  created_at    DateTime @default(now())

  city cities @relation(fields: [cityId], references: [id])
  year years  @relation(fields: [yearId], references: [id])
}

enum SocialType {
  SOLO
  PAIR
  FAMILY
}