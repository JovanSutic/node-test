import { CreateCityDto } from "../src/cities/cities.dto";
import { CreateProductDto, ProductType } from "../src/products/products.dto";
import { CreateYearDto } from "../src/years/years.dto";
import { CreateCategoryDto } from "../src/categories/categories.dto";
import { CreatePriceDto, PriceType } from "../src/prices/prices.dto";
import {
  CreateCrimeAspectDto,
  CreateCrimeRankDto,
} from "../src/crimes/crimes.dto";
import {
  CreateSocialLifestyleDto,
  SocialType,
} from "../src/social_lifestyle/social_lifestyle.dto";
import { CreateWeathersDto, WeathersDto } from "../src/weathers/weathers.dto";
import { CreateCountryDto } from "../src/countries/countries.dto";
import { CreateAspectDto } from "../src/aspect/aspect.dto";
import { CreateDefinitionDto } from "../src/definition/definition.dto";
import { CreateDefValueDto } from "../src/def_value/def_value.dto";
import { CreateCityFeelDto } from "../src/city_feel/city_feel.dto";
import { CreateLayerDto, CreateLayerTypeDto } from "../src/layers/layers.dto";

export const categories: CreateCategoryDto[] = [
  {
    name: "Restaurants",
  },
  {
    name: "Markets",
  },
  {
    name: "Rent Per Month",
  },
  {
    name: "Buy Apartment Price",
  },
  {
    name: "Transportation",
  },
  {
    name: "Utilities (Monthly)",
  },
  {
    name: "Sports And Leisure",
  },
  {
    name: "Clothing And Shoes",
  },
  {
    name: "Childcare",
  },
];

export const countries: CreateCountryDto[] = [
  { name: "Italy" },
  { name: "Spain" },
  { name: "Netherlands" },
  { name: "France" },
  { name: "Germany" },
  { name: "Serbia" },
  { name: "Hungary" },
  { name: "Austria" },
  { name: "Greece" },
  { name: "Bulgaria" },
];

export const cities: CreateCityDto[] = [
  {
    name: "Amsterdam",
    country: "Netherlands",
    countriesId: 3,
    search: "Amsterdam",
    lat: 52.377956,
    lng: 4.89707,
    size: 2000000,
    seaside: true,
  },
  {
    name: "Paris",
    country: "France",
    countriesId: 4,
    search: "Paris",
    lat: 48.858093,
    lng: 2.294694,
    size: 6000000,
    seaside: false,
  },
  {
    name: "Rome",
    country: "Italy",
    countriesId: 1,
    search: "Rome",
    lat: 41.89193,
    lng: 12.51133,
    size: 5000000,
    seaside: false,
  },
  {
    name: "Barcelona",
    country: "Spain",
    countriesId: 2,
    search: "Barcelona",
    lat: 41.38879,
    lng: 2.15899,
    size: 4000000,
    seaside: true,
  },
  {
    name: "Madrid",
    country: "Spain",
    countriesId: 2,
    search: "Madrid",
    lat: 40.416775,
    lng: -3.70379,
    size: 5000000,
    seaside: false,
  },
  {
    name: "Berlin",
    country: "Germany",
    countriesId: 5,
    search: "Berlin",
    lat: 52.5373,
    lng: 13.356085,
    size: 4000000,
    seaside: false,
  },
  {
    name: "Vienna",
    country: "Austria",
    countriesId: 8,
    search: "Vienna",
    lat: 48.20849,
    lng: 16.37208,
    size: 4000000,
    seaside: false,
  },
  {
    name: "Budapest",
    country: "Hungary",
    countriesId: 7,
    search: "Budapest",
    lat: 47.526642,
    lng: 19.046394,
    size: 3000000,
    seaside: false,
  },
  {
    name: "Belgrade",
    country: "Serbia",
    countriesId: 6,
    search: "Belgrade",
    lat: 44.80401,
    lng: 20.46513,
    size: 2000000,
    seaside: false,
  },
  {
    name: "Athens",
    country: "Greece",
    search: "Athens",
    lat: 37.970833,
    lng: 23.72611,
    size: 3000000,
    seaside: false,
  },
  {
    name: "Lisbon",
    country: "Portugal",
    search: "Lisbon",
    lat: 37.970833,
    lng: 23.72611,
    size: 3000000,
    seaside: true,
  },
];

export const years: CreateYearDto[] = [
  {
    year: 2011,
  },
  {
    year: 2010,
  },
  {
    year: 2012,
  },
  {
    year: 2013,
  },
  {
    year: 2014,
  },
  {
    year: 2015,
  },
  {
    year: 2016,
  },
  {
    year: 2017,
  },
  {
    year: 2018,
  },
  {
    year: 2019,
  },
  {
    year: 2020,
  },
  {
    year: 2021,
  },
  {
    year: 2022,
  },
  {
    year: 2023,
  },
  {
    year: 2024,
  },
  {
    year: 2025,
  },
];

export const products: CreateProductDto[] = [
  {
    name: "Meal, Inexpensive Restaurant",
    categoryId: 1,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Meal for 2 People, Mid-range Restaurant, Three-course",
    categoryId: 1,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "McMeal at McDonalds (or Equivalent Combo Meal)",
    categoryId: 1,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Domestic Beer (0.5 liter draught)",
    categoryId: 1,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Imported Beer (0.33 liter bottle)",
    categoryId: 1,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Coke/Pepsi (0.33 liter bottle)",
    categoryId: 1,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Water (0.33 liter bottle)",
    categoryId: 1,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Cappuccino (regular)",
    categoryId: 1,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Milk (regular), (1 liter)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Loaf of Fresh White Bread (500g)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Eggs (regular) (12)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Water (1.5 liter bottle)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Domestic Beer (0.5 liter bottle)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Apples (1kg)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Oranges (1kg)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Potato (1kg)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Lettuce (1 head)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Rice (white), (1kg)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Tomato (1kg)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Banana (1kg)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Onion (1kg)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Local Cheese (1kg)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Bottle of Wine (Mid-Range)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Cigarettes 20 Pack (Marlboro)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Chicken Fillets (1kg)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Beef Round (1kg) (or Equivalent Back Leg Red Meat)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Apartment (1 bedroom) in City Centre",
    categoryId: 3,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Apartment (1 bedroom) Outside of Centre",
    categoryId: 3,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Apartment (3 bedrooms) in City Centre",
    categoryId: 3,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Apartment (3 bedrooms) Outside of Centre",
    categoryId: 3,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Price per Square Meter to Buy Apartment in City Centre",
    categoryId: 4,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Price per Square Meter to Buy Apartment Outside of Centre",
    categoryId: 4,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Average Monthly Net Salary (After Tax)",
    categoryId: 4,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "One-way Ticket (Local Transport)",
    categoryId: 5,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Gasoline (1 liter)",
    categoryId: 5,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Monthly Pass (Regular Price)",
    categoryId: 5,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate",
    categoryId: 5,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment",
    categoryId: 6,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Internet (60 Mbps or More, Unlimited Data, Cable/ADSL)",
    categoryId: 6,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Mobile Phone Monthly Plan with Calls and 10GB+ Data",
    categoryId: 6,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Fitness Club, Monthly Fee for 1 Adult",
    categoryId: 7,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Tennis Court Rent (1 Hour on Weekend)",
    categoryId: 7,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Cinema, International Release, 1 Seat",
    categoryId: 7,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "1 Pair of Jeans (Levis 501 Or Similar)",
    categoryId: 8,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "1 Summer Dress in a Chain Store (Zara, H&M, ...)",
    categoryId: 8,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "1 Pair of Nike Running Shoes (Mid-Range)",
    categoryId: 8,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "1 Pair of Men Leather Business Shoes",
    categoryId: 8,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Imported Beer (0.33 liter bottle)",
    categoryId: 2,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Taxi Start (Normal Tariff)",
    categoryId: 5,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Taxi 1km (Normal Tariff)",
    categoryId: 5,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Taxi 1hour Waiting (Normal Tariff)",
    categoryId: 5,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car)",
    categoryId: 5,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Toyota Corolla Sedan 1.6l 97kW Comfort (Or Equivalent New Car)",
    categoryId: 5,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child",
    categoryId: 9,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
  {
    name: "International Primary School, Yearly for 1 Child",
    categoryId: 9,
    unit: "1 item",
    description: "",
    type: ProductType.ALL,
  },
];

export const prices: CreatePriceDto[] = [
  {
    price: 4047.06,
    top: 5200,
    bottom: 3000,
    currency: "EUR",
    cityId: 4,
    productId: 32,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 2.4,
    top: 4,
    bottom: 1.86,
    currency: "EUR",
    cityId: 4,
    productId: 50,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 1.63,
    top: 1.8,
    bottom: 1.4,
    currency: "EUR",
    cityId: 4,
    productId: 35,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 159.64,
    top: 250,
    bottom: 100,
    currency: "EUR",
    cityId: 4,
    productId: 38,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 5501.68,
    top: 6600,
    bottom: 4597,
    currency: "EUR",
    cityId: 4,
    productId: 31,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 3.5,
    top: 6,
    bottom: 2.2,
    currency: "EUR",
    cityId: 4,
    productId: 4,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 4,
    top: 6,
    bottom: 3,
    currency: "EUR",
    cityId: 4,
    productId: 5,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 2.42,
    top: 3,
    bottom: 2,
    currency: "EUR",
    cityId: 4,
    productId: 6,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 1.81,
    top: 2.5,
    bottom: 1.2,
    currency: "EUR",
    cityId: 4,
    productId: 7,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 1.08,
    top: 1.5,
    bottom: 0.85,
    currency: "EUR",
    cityId: 4,
    productId: 9,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 1.73,
    top: 3.5,
    bottom: 0.8,
    currency: "EUR",
    cityId: 4,
    productId: 10,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 1.63,
    top: 3,
    bottom: 1,
    currency: "EUR",
    cityId: 4,
    productId: 18,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 14.83,
    top: 25,
    bottom: 8,
    currency: "EUR",
    cityId: 4,
    productId: 22,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 8.15,
    top: 12,
    bottom: 5,
    currency: "EUR",
    cityId: 4,
    productId: 25,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 16.67,
    top: 23,
    bottom: 9,
    currency: "EUR",
    cityId: 4,
    productId: 26,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 2.28,
    top: 3,
    bottom: 1.49,
    currency: "EUR",
    cityId: 4,
    productId: 14,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 2.07,
    top: 3,
    bottom: 1.2,
    currency: "EUR",
    cityId: 4,
    productId: 20,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 1.94,
    top: 3.31,
    bottom: 1,
    currency: "EUR",
    cityId: 4,
    productId: 15,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 2.32,
    top: 4,
    bottom: 1.19,
    currency: "EUR",
    cityId: 4,
    productId: 19,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 1.68,
    top: 2,
    bottom: 1,
    currency: "EUR",
    cityId: 4,
    productId: 16,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 1.59,
    top: 2.3,
    bottom: 1,
    currency: "EUR",
    cityId: 4,
    productId: 21,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 2.02,
    top: 3.2,
    bottom: 1.1,
    currency: "EUR",
    cityId: 4,
    productId: 48,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 12553.85,
    top: 18960,
    bottom: 9000,
    currency: "EUR",
    cityId: 4,
    productId: 55,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 91.19,
    top: 120,
    bottom: 60,
    currency: "EUR",
    cityId: 4,
    productId: 46,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 3.39,
    top: 4,
    bottom: 2.5,
    currency: "EUR",
    cityId: 4,
    productId: 37,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 18.6,
    top: 28,
    bottom: 12,
    currency: "EUR",
    cityId: 4,
    productId: 42,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 60,
    top: 100,
    bottom: 45,
    currency: "EUR",
    cityId: 4,
    productId: 2,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 0.75,
    top: 1.5,
    bottom: 0.35,
    currency: "EUR",
    cityId: 4,
    productId: 12,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 6,
    top: 12,
    bottom: 3,
    currency: "EUR",
    cityId: 4,
    productId: 23,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 2.55,
    top: 3,
    bottom: 2.25,
    currency: "EUR",
    cityId: 4,
    productId: 34,
    yearId: 16,
    priceType: PriceType.CURRENT,
  },
  {
    price: 15,
    top: 20,
    bottom: 11,
    currency: "EUR",
    cityId: 4,
    productId: 1,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 12,
    top: 12,
    bottom: 9.85,
    currency: "EUR",
    cityId: 4,
    productId: 3,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 2.42,
    top: 4,
    bottom: 1.5,
    currency: "EUR",
    cityId: 4,
    productId: 8,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 2.88,
    top: 4.56,
    bottom: 2,
    currency: "EUR",
    cityId: 4,
    productId: 11,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 1.24,
    top: 2,
    bottom: 0.8,
    currency: "EUR",
    cityId: 4,
    productId: 17,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 1.2,
    top: 1.52,
    bottom: 0.8,
    currency: "EUR",
    cityId: 4,
    productId: 13,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 6,
    top: 7,
    bottom: 5.15,
    currency: "EUR",
    cityId: 4,
    productId: 24,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 23,
    top: 42,
    bottom: 21.35,
    currency: "EUR",
    cityId: 4,
    productId: 36,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 3.88,
    top: 5,
    bottom: 2.55,
    currency: "EUR",
    cityId: 4,
    productId: 49,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 25.3,
    top: 42,
    bottom: 24.68,
    currency: "EUR",
    cityId: 4,
    productId: 51,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 33365,
    top: 33365,
    bottom: 30000,
    currency: "EUR",
    cityId: 4,
    productId: 52,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 28571.43,
    top: 30200,
    bottom: 26000,
    currency: "EUR",
    cityId: 4,
    productId: 53,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 19.29,
    top: 40,
    bottom: 10,
    currency: "EUR",
    cityId: 4,
    productId: 40,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 34,
    top: 52.9,
    bottom: 25,
    currency: "EUR",
    cityId: 4,
    productId: 39,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 47.99,
    top: 65,
    bottom: 30,
    currency: "EUR",
    cityId: 4,
    productId: 41,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 9.5,
    top: 12,
    bottom: 8,
    currency: "EUR",
    cityId: 4,
    productId: 43,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 598.53,
    top: 900,
    bottom: 474.95,
    currency: "EUR",
    cityId: 4,
    productId: 54,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 74.05,
    top: 110,
    bottom: 50,
    currency: "EUR",
    cityId: 4,
    productId: 44,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 32.05,
    top: 60,
    bottom: 20,
    currency: "EUR",
    cityId: 4,
    productId: 45,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 102.94,
    top: 180,
    bottom: 70,
    currency: "EUR",
    cityId: 4,
    productId: 47,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 1336.79,
    top: 1800,
    bottom: 1000,
    currency: "EUR",
    cityId: 4,
    productId: 27,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 1031.98,
    top: 1500,
    bottom: 850,
    currency: "EUR",
    cityId: 4,
    productId: 28,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 2366.76,
    top: 3500,
    bottom: 1700,
    currency: "EUR",
    cityId: 4,
    productId: 29,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 1574.82,
    top: 2500,
    bottom: 1150,
    currency: "EUR",
    cityId: 4,
    productId: 30,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
  {
    price: 1775.98,
    top: 0,
    bottom: 0,
    currency: "EUR",
    cityId: 4,
    productId: 33,
    yearId: 16,

    priceType: PriceType.CURRENT,
  },
];

export const socialLifeStyleReports: CreateSocialLifestyleDto[] = [
  {
    cityId: 1,
    yearId: 1,
    avg_price: 200,
    currency: "EUR",
    type: SocialType.SOLO,
  },
  {
    cityId: 2,
    yearId: 1,
    avg_price: 200,
    currency: "EUR",
    type: SocialType.SOLO,
  },
  {
    cityId: 2,
    yearId: 2,
    avg_price: 500,
    currency: "EUR",
    type: SocialType.SOLO,
  },
  {
    cityId: 2,
    yearId: 3,
    avg_price: 1200,
    currency: "EUR",
    type: SocialType.SOLO,
  },
];

export const crimeAspects: CreateCrimeAspectDto[] = [
  {
    name: "Level of crime",
  },
  {
    name: "Crime increasing in the past 5 years",
  },
  {
    name: "Worries home broken and things stolen",
  },
];

export const crimeRanks: CreateCrimeRankDto[] = [
  {
    cityId: 1,
    yearId: 1,
    crimeAspectId: 1,
    rank: 38.7,
  },
  {
    cityId: 1,
    yearId: 1,
    crimeAspectId: 2,
    rank: 68.7,
  },
  {
    cityId: 2,
    yearId: 1,
    crimeAspectId: 1,
    rank: 44.7,
  },
  {
    cityId: 2,
    yearId: 1,
    crimeAspectId: 2,
    rank: 5.7,
  },
];

export const weathers: CreateWeathersDto[] = [
  {
    cityId: 1,
    sunshine: 250,
    rain: 100,
    cold: 60,
    heat: 90,
    cold_extremes: 5,
    heat_extremes: 3,
    humidity: 75,
    severe: "Low risk of storms",
    lowest: -10,
    highest: 35,
  },
  {
    cityId: 2,
    sunshine: 250,
    rain: 120,
    cold: 60,
    heat: 90,
    cold_extremes: 5,
    heat_extremes: 3,
    humidity: 75,
    severe: "Low risk of winds",
    lowest: -10,
    highest: 35,
  },
];

export const cityFeels: CreateCityFeelDto[] = [
  {
    cityId: 1,
    rank: 8,
    tags: "init/shortIncrease:1.4",
    budget: 3681.2,
  },
  {
    cityId: 2,
    rank: 8,
    tags: "init/shortIncrease:1.4",
    budget: 2781.2,
  },
];

export const layerTypes: CreateLayerTypeDto[] = [
  {
    name: "Budget Solo - Medium",
    type: "money",
  },
  {
    name: "Budget Solo - Low",
    type: "money",
  },
  {
    name: "Self Employment Taxes",
    type: "percentage",
  },
];

export const layers: CreateLayerDto[] = [
  {
    cityId: 1,
    layerTypeId: 1,
    value: 3800,
  },
  {
    cityId: 2,
    layerTypeId: 1,
    value: 2800,
  },
  {
    cityId: 1,
    layerTypeId: 2,
    value: 1800,
  },
  {
    cityId: 2,
    layerTypeId: 2,
    value: 800,
  },
  {
    cityId: 1,
    layerTypeId: 3,
    value: 15,
  },
  {
    cityId: 2,
    layerTypeId: 3,
    value: 8,
  },
];

export const aspects: CreateAspectDto[] = [
  {
    name: "insurance",
    field: "healthcare",
  },
  {
    name: "insurance_pricing",
    field: "healthcare",
  },
];

export const definitions: CreateDefinitionDto[] = [
  {
    label: "Tier 3 – SSN Only",
    type: "text_list",
    aspectId: 1,
  },
  {
    label: "Tier 2 – SSN + Supplemental Private",
    type: "text_list",
    aspectId: 1,
  },
  {
    label: "Tier 1 – SSN + Full Private",
    type: "text_list",
    aspectId: 1,
  },
  {
    label: "Tax config",
    type: "country_tax_configuration",
    aspectId: 2,
  },
  {
    label: "Tax regime rules",
    type: "tax_regime_rules",
    aspectId: 2,
  },
];

export const defValues: CreateDefValueDto[] = [
  {
    definitionId: 1,
    countryId: 1,
    value: "Assigned general practitioner (GP / medico di base)",
    type: "item",
    visible: true,
  },
  {
    definitionId: 1,
    countryId: 1,
    value: "Access to public specialists (with referral)",
    type: "item",
    visible: true,
  },
  {
    definitionId: 1,
    countryId: 1,
    value: "Hospitalization and surgeries in public hospitals",
    type: "item",
    visible: true,
  },
  {
    definitionId: 1,
    countryId: 1,
    value: "Emergency care (ambulance, ER)",
    type: "item",
    visible: true,
  },
  {
    definitionId: 1,
    countryId: 1,
    value: "Partially reimbursed prescriptions",
    type: "item",
    visible: true,
  },
  {
    definitionId: 1,
    countryId: 1,
    value: "Basic maternity, pediatric, and chronic disease coverage",
    type: "item",
    visible: true,
  },
  {
    definitionId: 1,
    countryId: 1,
    value: "Low-income exemptions available via ISEE",
    type: "item",
    visible: true,
  },
  {
    definitionId: 1,
    countryId: 1,
    value: "Include dependent family members",
    type: "item",
    visible: true,
  },
  {
    definitionId: 4,
    countryId: 6,
    value:
      '"{"country":"Serbia","regimes":[{"name":"Flat Serbian Regime","conditions":{"type":"AND","list":[{"name":"flat_1","subject":"isIndependent","operation":"EQUALS","condition":1,"conditionType":"number","object":""},{"name":"flat_2","subject":"income","operation":"LESS THAN","condition":51000,"conditionType":"number","object":""}]},"rules":1},{"name":"Bookkeeping Regime","conditions":{"type":"AND","list":[{"name":"booked_1","subject":"isIndependent","operation":"EQUALS","condition":1,"conditionType":"number","object":""},{"name":"booked_2","subject":"income","operation":"MORE THAN","condition":51000,"conditionType":"number","object":""}]},"rules":2},{"name":"LLC Regime","conditions":{"type":"OR","list":[{"name":"llc_1","subject":"isIndependent","operation":"EQUALS","condition":0,"conditionType":"number","object":""}]},"rules":3}],"extras":{"jointFilingBenefits":false}}"',
    type: "country_config",
    visible: true,
  },
  {
    definitionId: 5,
    countryId: 6,
    value:
      '"{"id":1,"tax":{"type":"fixedProgressive","level":"state","other":{"fixed":[{"maxIncome":51000,"taxAmount":360}],"rate":"monthly"},"regionalExclusivity":false,"taxableIncomeSequence":""},"finals":{"totalTax":"stateTax - taxCredit","net":"(grossIncome - socials - totalHealth) - (stateTax - taxCredit)","netIncome":"(grossIncome - socials - totalHealth) - (stateTax - taxCredit)"}}"',
    type: "country_tax_rule",
    visible: true,
  },
  {
    definitionId: 5,
    countryId: 6,
    value:
      '"{"id":2,"tax":{"type":"salaryMixed","level":"state","rate":0.1,"other":{"allowAdditional":true},"regionalExclusivity":false,"taxableIncomeSequence":"expensesReduction,minSalaryReduction"},"social":{"type":"flat","baseType":"salary","allowDiscount":false,"rateIndex":1,"rate":0,"discountedAmount":0,"discountLength":0,"maxCap":100000000,"maxCapBase":0,"minCapBase":0},"finals":{"totalTax":"stateTax + salaryTax + additionalTax","net":"taxableIncome - stateTax + salaryDiff","netIncome":"taxableIncome - stateTax + salaryDiff - additionalTax"},"salary":{"salaryContributionsRate":0.3775,"salaryUntaxedPart":243,"salaryTax":0.1,"salaryMinimum":392,"salaryAverageAnnual":10850}}"',
    type: "country_tax_rule",
    visible: true,
  },
  {
    definitionId: 5,
    countryId: 6,
    value:
      '"{"id":3,"tax":{"type":"corporateSuccessive","level":"state","rate":0.15,"other":{"withholdingTax":0.15,"allowAdditional":true},"regionalExclusivity":false,"taxableIncomeSequence":"expensesReduction,minSalaryReduction"},"social":{"type":"flat","baseType":"salary","allowDiscount":false,"rateIndex":1,"rate":0,"discountedAmount":0,"discountLength":0,"maxCap":100000000,"maxCapBase":0,"minCapBase":0},"finals":{"totalTax":"stateTax + salaryTax + additionalTax","net":"taxableIncome - stateTax + salaryDiff","netIncome":"taxableIncome - stateTax + salaryDiff - additionalTax"},"salary":{"salaryContributionsRate":0.3775,"salaryUntaxedPart":243,"salaryTax":0.1,"salaryMinimum":432.2,"salaryAverageAnnual":10850}}"',
    type: "country_tax_rule",
    visible: true,
  },
];
